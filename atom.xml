<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安阳</title>
  
  <subtitle>You Deserve Better.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://JohnneyAnn.github.io/"/>
  <updated>2018-01-26T16:58:36.075Z</updated>
  <id>http://JohnneyAnn.github.io/</id>
  
  <author>
    <name>安 阳</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>区块链（BlockChain）</title>
    <link href="http://JohnneyAnn.github.io/2018/01/27/%E5%8C%BA%E5%9D%97%E9%93%BE-BlockChain/"/>
    <id>http://JohnneyAnn.github.io/2018/01/27/区块链-BlockChain/</id>
    <published>2018-01-26T16:58:36.079Z</published>
    <updated>2018-01-26T16:58:36.075Z</updated>
    
    <content type="html"><![CDATA[<p>最近大家可能被区块链的推送推的烦了，不只是“区块链”，还有这些名词：“炒币”、“挖矿”、“矿工”、“区块链”、“ICO”等。也许由于之前的勒索病毒的影响太大，使得它将用于其支付的比特币推向了白热化，各大媒体都去谈论比特币是什么，“区块链”技术渐渐从极客圈向大众圈扩散，加上比特币汇率的变化（截至写这篇博客BTC/CNY:86655.16），更让其走进了投资圈。我写这篇博客或许也是在蹭热点，但请往下看。</p><a id="more"></a><h1 id="为什么写这篇博客"><a href="#为什么写这篇博客" class="headerlink" title="为什么写这篇博客"></a>为什么写这篇博客</h1><h2 id="两片有意思的文章"><a href="#两片有意思的文章" class="headerlink" title="两片有意思的文章"></a>两片有意思的文章</h2><p>我想往常一样浏览着文章，看到一个标题《区块链微信》（发布于woshipm.com,作者@A.J.软软熊），看着着实有意思，大概是微信像是一系列账本，再结合区块链技术得到一个不一样的分布式程序，作者还取了个名字BWeChat（BlockChainWeChat,区块链微信）。有趣归有趣，但看不太懂，因为很多专业名词之前都没听过，也不知道为啥区块链微信会有这些东西，这只能去看看区块链是什么才能够明白一点，于是我想着该去了解一些再来看看，理解了肯定更有意思。</p><p>我大概是个猫奴，虽然我没有猫（我一定会有个猫的）。“云养猫”是之前网上为了调侃没有猫却喜欢猫而且还撸不到现实中猫的人，比如说我，这里套用“云”，因为我们这类人喜欢看猫的图片、动画、视频，都是别人的猫。你可能以为我跑题了，不，并没有，我是为了引出我接下来要说的事（知识点，记下）。上文说到的“云养猫”大概属于低层次“云养猫”，来说说区块链养猫吧。也就是看到的第二篇文章《区块链养猫，我们时代的一个不和谐的符号》（发布于woshipm.com,作者@joeycidic）,文中说到这是有Axiom Zen工作室开发的虚拟宠物养成社区游戏，玩家在区块链上买虚拟的猫，互相或者和别的玩家的猫进行繁殖，每只猫有256种基因，基于一定的算法，可以遗传到下一代。基因的组合和传递是不透明的，这吸引的玩家乐此不疲的买猫和生仔。太有趣了！我也要买一个！于是看了下价格，最贵的猫10万美元，均价130美元，我可能不适合这个游戏。文中介绍到这是一个有现金投资和收益的游戏，在用户能持续消费（生小猫）和交易（购买猫）的前提下，区块链猫变成了一种能产生现金流回报的资产。这片文章没过多说区块链的原理，包含哪些东西，而是主要来介绍这个游戏，因此比上一篇文章容易取看懂，这里介绍的多一点（或许是因为是说猫的我没刹住车），其实还有很多内容，这里就不赘述了，文末会放链接。</p><h2 id="一本区块链的书"><a href="#一本区块链的书" class="headerlink" title="一本区块链的书"></a>一本区块链的书</h2><p>想去完整的了解一个东西，得找到合适的渠道。于是找到了《区块链：定义未来金融与经济新格局》（作者：火币网 张健），这是一本深入浅出，科学严谨的区块链专业著作，张健是火币技术副总裁、国内领先的区块链查询及数据服务平台“Qukuai.com”创始人。想从网上找到合适的书籍并不容易，看完这本，还是比较喜欢的，这本书涉及的领域非常宽泛，对于技术的深究还得去多学习，但去了解个大概，这本书是再合适不过了。这篇博客所涉及的区块链介绍及应用大多来自这本书，因此可以看出是对这本书的整理，文末会放上写这篇博客的思维导图。或许我也该把博客名字改成“一文看懂区块链”来博得大家的眼球，这太放肆了，只能算的上名词解释，不敢造次，因为自己还没明白。这篇博客的定位是一篇读书记录、一篇书籍的推荐文、一篇满足自己好奇心的文章。</p><h2 id="微信公众号的推送"><a href="#微信公众号的推送" class="headerlink" title="微信公众号的推送"></a>微信公众号的推送</h2><p>这个模块是有顺序的，先看到有趣的文章，再去了解，最后是接收到关于区块链的公众号推送。乍一看，很想是AI智能推荐，你在看什么，我就给你推送什么（这里只是顺带吐槽）。我确认我使用的是两个不同的软件，不同的账号，二者没有任何关联，另外公众号的推送属于全投放，大多数阅读类公众号为提高阅读量，并不会将消息推送给特定用户群体，而且也不知道我平时干了啥，于是得出结论，是最近区块链过热了（以上说的都是屁话）。刚刚经过一波毫无意义的分析，得出了一个早就显现的结论，我们为作者（安阳）鼓个掌增加其创作的动力，然后作者准备说正文了。微信公众号推送的关于区块链的文章太多了，开始我也看，后来我发现大多就那几个版本，就说什么区块链技术、数字货币的本质，还会配上“一文看懂区块链”，“你真的了解区块链”等等等等的标题（这个上节有提到过，毕竟很多标题党都这么来欺骗无知的少年，我就被套路过不下N次），再尴尬的是好几个公众号（小规模）推送的内容是一样的，以阮一峰系列为主，因此看一两个就够了，别浪费自己时间。当然也不全是，有的知名的公众号还是会出一些分析报告，像是目前国内哪些公司使用区块链以及其应用，这些还是可以的。是真的被推烦了，就怕自己手贱再去点开，于是，我决定自己也要写一篇！然后点我自己的。如果能找到那些公众号的作者我就把他们拉个群然后把我的文章链接发给他，一天发两次，最好还能@全体。（突然扯了好多，我是要介绍区块链的男人啊！罪过罪过）</p><h1 id="区块链和其相关的概念"><a href="#区块链和其相关的概念" class="headerlink" title="区块链和其相关的概念"></a>区块链和其相关的概念</h1><h2 id="区块链的定义"><a href="#区块链的定义" class="headerlink" title="区块链的定义"></a>区块链的定义</h2><p>关于区块链的定义网上有很多了，这里抛几个。</p><blockquote><p>狭义来讲，区块链是一种按照时间顺序将数据区块以顺序相连的方式组合成的一种链式数据结构， 并以密码学方式保证的不可篡改和不可伪造的分布式账本。<br>广义来讲，区块链技术是利用块链式数据结构来验证与存储数据、利用分布式节点共识算法来生成和更新数据、利用密码学的方式保证数据传输和访问的安全、利用由自动化脚本代码组成的智能合约来编程和操作数据的一种全新的分布式基础架构与计算范式。–百度百科</p><p>区块链（这里特指比特币区块链）的本质是一种去中心化的记账系统，而比特币正是这个系统上承载的“以数字形式存在”的货币。 –《区块链：定义未来金融与经济新格局》（以下简称《区块链》）</p></blockquote><p>区块链或者说比特币什么时候出现的呢？这里有一个背景，2008年9月，金融危机在美国爆发并席卷全世界。同年10月31日下午，在一个普通的密码学机构邮件列表中，几百个成员均收到了自称是“中本聪”的人发送的电子邮件。他在邮件里描述了一个全新的，不依赖任何机构、政府，完全网络化的货币体系。一个月后，中本聪放出了比特币系统最原始的版本。</p><h2 id="去中心化、竞争记账、POW"><a href="#去中心化、竞争记账、POW" class="headerlink" title="去中心化、竞争记账、POW"></a>去中心化、竞争记账、POW</h2><p>区块链诞生了，不管从哪里看到的定义，都有一个核心的概念—去中心化。在我们现在的生活中，为了保证所记录的数据是唯一的，比如说账本，因此就导致了记账是一种天然的中心化行为。这样的例子还有很多，我们在办理某个事情的时候，经常需要开一些证明，证明我是我（公安局里证明）、证明我有这么多钱（银行系统），证明婚姻关系（民政局）等等，我们有很多第三方组织或机构来证明我们以及我们所拥有的存在，而这些不过只是数据库里的数据罢了。我们可以看到这些中心化的记录方式有显而易见的弱点：一旦这个中心出现问题，如被篡改、被损坏，整个系统就会面临危机乃至崩溃，到那时我们还存在么？因此我们能不能构建一个不依赖任何中心或者第三方但可靠的系统呢？事实上，这比想象的要复杂的多（以记账为例），账本数据存储要去中心化（所有的参与方都平等地拥有保存账本的能力），记账行为去中心化（参与方平等的拥有记录账务数据的权利）。这就出现了一个悖论，不同节点缺乏信任的前提下数据的一致性难以保证。</p><p>这个看似不可能解决的问题，由区块链解决了。从字面意思，区块链就是由区块组成的链条，《区块链》有一个比喻，如果区块链是一个账本，那么区块就相当于账本中的一页。当前时代负责记账的自然是计算机，每个计算机就是一个节点，每个节点竞争记账（以每个节点的计算能力来竞争记账权的机制），这就是区块链的架构设计。计算能力（算力）只能决定赢得的概率，就像你买多张彩票可以增加获奖的概率，但你不一定会中奖。区块链通过“工作量证明（Proof Of Work,POW）”来实现竞争记账，你完成了该做的工作量（一般是一个人人都可验证的结果），那你就可以记账了。</p><p>在中本聪的设计里引入竞争的同时解决了货币发行的问题，每轮竞争胜出并完成记账的节点会获得系统给予的比特币奖励。比特币生产总量被限制在2100万枚，总量一定，这个像是黄金开采过程，于是被人们称为“挖矿”，干这活的就是“矿工”了。</p><h2 id="共识机制与价值载体"><a href="#共识机制与价值载体" class="headerlink" title="共识机制与价值载体"></a>共识机制与价值载体</h2><p>有那么多的节点，在去中心化的结构中如何保证你的记录被其他所有节点认可呢？这里要说到两个关键，共识机制与价值载体。传统的中心化结构中，系统的共识有中心决定，参与方服从即可。去中心化的结构中，可就没这么简单，比特币区块链通过工作量证明来实现共识机制，大家一起竞争，满足条件即可记账，反之不满足条件的记录是不被大家认可的，这里的条件是大家都认可的结果（目前是采用通过哈希计算的值以多少个0开头，这里只是简单的提一下，肯定没说的这么简单），这样大家就达成了一致（可以看出区块链制造的是信任）。区块链的发展潜力体现在这个系统上所能承载的各种价值形式，说的有点迷糊，其实就是区块链不仅可以记账，对于任何可以用数字定义的资产都可以在区块链上记录，如今我们是信息时代，我们存在的证明大多都是数字了，那么我们就可以以数字形式进行价值存储或转移任何东西。</p><h2 id="智能合约"><a href="#智能合约" class="headerlink" title="智能合约"></a>智能合约</h2><p>智能合约的理念可以追溯到1994年，几乎与互联网同时出现。智能合约就像是一段逻辑代码，类似我们经常写的if…else，当发生什么情况而执行该情况下的代码，这个对我们来说很好理解，好歹是个程序员啊。我们现在会用合同来制定双方该各自遵守的条件，纸质合同也好，电子合同也好，都是需要人来去执行的，如某一方违约，那么按合同上的条款来执行。而智能合约就是把合同以代码的形式搬到区块链上，不需要任何人来监督执行，出现问题会触发条款自动执行，只要先预编好执行代码就行，这个交易智能化的以后一定会产生巨大影响。目前的比特币的脚本语言并不是图灵完备（图灵不完备的语言常常是因为循环或递归受限，无法实现特定的数据结构，可写的程序有限&lt;可以看看网上的介绍&gt;）的，所以在扩展性上比特币区块链所支持的资产定义和交易模式还比较有限，因此，业内有些人开始尝试开发支持图灵完备脚本语言的区块链，其中以太坊（Ethereum，可以自己去查一下，数字货币市值排名第二）就是个典型的例子。</p><h1 id="区块链技术原理"><a href="#区块链技术原理" class="headerlink" title="区块链技术原理"></a>区块链技术原理</h1><h2 id="区块链中的密码学"><a href="#区块链中的密码学" class="headerlink" title="区块链中的密码学"></a>区块链中的密码学</h2><p>在比特币区块链的整个体系中大量使用了公开的加密算法，比如Merkle Tree哈希树算法、椭圆曲线算法、SHA-256哈希算法、对称加密算法以及一些编码算法，如Base58编码、Verlnt编码、DER编码等。</p><p>这里说几个。比特币使用了基于secp256k1椭圆曲线数学的公钥密码学算法，它包含公钥和私钥，交易发出方用私钥进行签名，并将签名与原始数据发送给整个比特币网络，网络中所有节点则用公钥对交易有效性进行验证。签名算法保证了交易是由拥有对应私钥的人所发出的，核心就在于证明数据是签名者发出的、不可抵赖的，不是待签名数据本身的保密性。再说一个SHA-256哈希算法，SHA是安全散列算法（Secure Hash Algorithm）的缩写，是一个密码散列函数家族，由美国国家安全局（NSA）设计，美国国家标准与技术研究院（NIST）发布的，包括SHA-1、SHA-224、SHA-256、SHA-384和SHA-512五种变体，主要用于数字签名标准，其中SHA-256是输出值为256位的哈希算法。</p><h2 id="区块链组成"><a href="#区块链组成" class="headerlink" title="区块链组成"></a>区块链组成</h2><p>区块链数据由地址、交易、区块、网络组成。比特币用地址来表示标识一笔交易的支出方与接收方。交易最终需要被记录到有区块确认并完成的统一的账本上，每一个区块的产生都会被打上时间戳，最终生成的就是交易证明了。可以这么理解，所有的交易记录都是一条数据，也就是交易凭证，你所含有的资产其实也就是一条记录，只是大家都认可。每个独立节点之间又通过比特币网络来建立联系，这样就组成了一个去中心化的、分布式的电子交易记录时间戳服务器系统。</p><h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><p>地址其实是公钥的另一种表现形式，可以理解为公钥的摘要。生生过程如下：</p><ul><li>1.生成椭圆曲线私钥与公钥。</li><li>2.将公钥通过SHA-256哈希算法处理，得到32字节的哈希值。</li><li>3.对于得到的哈希值，通过RIPEMD-160算法来得到20字节的哈希值——Hash160。</li><li>4.把由版本号￼+Hash160组成的21字节数据进行双次SHA-256哈希运算，得到的哈希值的前4字节作为校验和，放置在21字节数据的末尾。</li><li>5.对组成的25字节数组进行Base58编码，就可得到地址。</li></ul><h3 id="交易"><a href="#交易" class="headerlink" title="交易"></a>交易</h3><p>关于交易。中本聪的白皮书里，比特币被定义为一个链式的数字签名串。每一位电子货币的所有者通过这样的方式将它转移给下一位所有者：对前一个交易和下一位所有者的公钥签署一个数字签名，并将这个签名附加在交易的末尾。收款人通过验证签名，就可以验证电子货币的所有者链条。交易的本质是一个包含交易发送方、接收方、资产转移等相关信息的数据结构，其数据结构如下：</p><ul><li>版本（version），这笔交易参照的规则，4字节</li><li>输入数量（IN-counter），交易输入（TxIn）列表的数量，1～9字节</li><li>输入列表，一个或多个交易输入，大小不定</li><li>输出数量（Out-counter），交易输出（TxOut）列表的数量，1～9字节</li><li>输入列表，一个或多个交易输出，大小不定</li><li>锁定时间（Lock time），4字节</li></ul><h3 id="UTXO"><a href="#UTXO" class="headerlink" title="UTXO"></a>UTXO</h3><p>UTXO（Unspent Transaction Outputs）结构。UTXO是未花费的交易输出，这是比特币交易生成及验证的一个核心概念。比特币规定每一笔新交易的输入必须是某笔交易未花费的输出。至此，比特币的交易输入有3种：标准输入、花费挖矿奖励、产生挖矿奖励（上文说到，对于记账成功的节点会获得比特币奖励）。</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>脚本是交易里另一个比较重要的技术。每一笔交易的每一项输出，严格意义上讲并不是指向一个地址，而是指向一个脚本。脚本类似于一套规则，它约束着接收方怎样才能花掉这个输出上锁定的资产。目前常用的比特币脚本主要分为两种，一种是普通的P2PKH类型（Pay-to-Public-Key-Hash），即支付给公钥的哈希值是地址，接收方只需要使用地址对应的私钥对该输出进行签名，即可花掉该输出。另一种是P2SH（Pay-to-Script-Hash），支付脚本的哈希值。拿多重签名来举例，它要求该输出要有N把私钥中的M把私钥（M≤N）同时签名才能花掉该资产，它类似于现实生活中需要多把钥匙才能同时打开的保险柜，只是更加灵活。<br>比如在比特币中，P2PKH的脚本规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Pubkey script:OP_DUP OP_HASH160 &lt;PubkeyHash&gt; OP_CHECKSIG</div><div class="line">Signature script:&lt;sig&gt;&lt;pubkey&gt;</div></pre></td></tr></table></figure></p><p>P2SH脚本规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Pubkey script:OP_HASH160 &lt;Hash160 (redeemScript) &gt; OP_EQUAL</div><div class="line">Signature script:&lt;sig&gt;[sig][sig...] &lt;redeemScript&gt;</div></pre></td></tr></table></figure></p><p>这个脚本我也不懂，放出来给大家观赏，可以看出P2SH中多重签名的概念，脚本执行很类似于Java执行再JVM中，”VM”来解析指令。脚本的存在，近实现了区块链可编程。但是，比特币区块链的脚本机制相对简单，是非图灵完备的，目前以太坊实现了一个支持图灵完备脚本语言的区块链平台。</p><h3 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h3><p>区块结构如下（Merkle Tree基本特点请百度）：</p><ul><li>魔术码：固定值0xD9B4BEF9，4字节</li><li>区块大小：用字节表示该段之后的区块大小，1～9字节</li><li>区块头：包含6个字段，80字节（由4字节的版本、32字节的上一个区块的哈希值、32字节的Merkle Root Hash、4字节的时间戳、4字节的档期难度值、4字节的随机数组成）</li><li>交易数量：交易列表长度，1～9字节</li><li>交易列表：记录到区块的交易信息列表中，大小不定</li></ul><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p>比特币网络的相关功能如下：</p><ul><li>1.新交易广播（使用洪水算法Flooding,是时候把大学的课本搬出来了）到全网的节点，每个节点会收到交易消息。</li><li>2.每个（挖矿）节点将新交易收集到节点的内存，并组装成区块。</li><li>3.每个（挖矿）节点都尝试在自己的区块中找到一个具有足够难度的工作量证明。</li><li>4.（挖矿）节点找到一个工作量证明，把有效的区块数据向全网进行广播。</li><li>5.当且仅当包含在该区块中的交易都是有效的，并验证其完成了工作量证明，其他节点才认同该区块的有效性。</li><li>6.其他（挖矿）节点表示接受该区块，并在该区块的末尾制造新的区块以延长整个区块的链条。</li></ul><h2 id="共识算法"><a href="#共识算法" class="headerlink" title="共识算法"></a>共识算法</h2><p>毕竟是个去中心化的系统，得保证整个P2P网络数据是一样的，还得保证对大家都是公平的，那就得有一套规约，也就是大家都遵守的协议，这里叫共识算法。两大核心：工作量证明与最长链机制。</p><h3 id="工作量证明"><a href="#工作量证明" class="headerlink" title="工作量证明"></a>工作量证明</h3><p>工作量证明（POW）可简单地理解为一份证明，用来确认你做过一定量的工作。说说比特币网了中的POW，如果想生成一个新的区块并写入区块链，则必须解出比特币网络出的工作量证明的迷题。这道题的3个关键要素是工作量证明函数、区块及难度值。其中难度值是用来调控的，就是在不管你有多大的挖矿能力，新区块的产生速率都保持在10分钟一个。计算公式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">新难度值=旧难度值*（过去2016个区块话费时长/20160分钟）</div></pre></td></tr></table></figure></p><p>另外POW需要有一个目标值，极计算公式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">目标值 = 最大目标值/难度值</div></pre></td></tr></table></figure></p><p>其中最大目标值为一个恒定值：0x00000000FFFFFFFFFFFF FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF，目标值的大小与难度值成反比，比特币工作量证明的达成条件就是矿工计算出来的<strong><em>区块哈希值必须小于目标值</em></strong>。</p><p>解题步骤大致如下：</p><ul><li>1.生成coinbase交易，并与其他所有准备打包进区块的交易组成交易列表，通过Merkle Tree算法生成Merkle Root Hash。</li><li>2.把Merkle Root Hash及其他相关字段组装成区块头，将区块头的80字节数据作为工作量证明的输入。</li><li>3.不停地变更区块头中的随机数（即nonce的数值），并对每次变更后的区块头做双重SHA-256运算（即SHA256 （SHA 256（Block_Header））），将结果值哈希反转并与当前网络的目标值对应的十进制字符串做对比，如果小于目标值，则解题成功，工作量证明完成。</li></ul><h3 id="最长链机制"><a href="#最长链机制" class="headerlink" title="最长链机制"></a>最长链机制</h3><p>比特币网络要求所有节点都遵循一个协议（共识），所有保存到本地的区块链必须是被本地节点验证通过的最长链。由于区块链的每个区块必须引用它的前一个区块，所以最长链是最难推翻的。</p><h3 id="算力攻击"><a href="#算力攻击" class="headerlink" title="算力攻击"></a>算力攻击</h3><p>当攻击者拥有的算力超过全网算力的51%时，可以用这些算力来重新计算已经确认过的区块，实现攻击，业内形象的称为51%算力攻击。中本聪在白皮书里做了个数学推算来证明比特币区块链体系的安全性，此计算证明比特币体系在设计上已经大大降低了双重支付（双花）的可能，另外对于51%算力攻击也被证明需要花费较高的攻击成本，而且也由于社区的理性选择，让攻击的成功率很低。（证明流程什么的就不赘述了，也说不好，请移步度娘谷哥）</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>至此，也介绍了比特币区块链的大部分概念，也就说个大概，对每个点说的并不是很全。还有像区块链的应用、侧链技术及其应用、货币、信用什么的就不说了，也说不好，这本书涉及的东西太多，也是刚了解可能思绪还比较乱能力也较差，肚子里有很多话想表达，可真的说也很难一一说全（可能找到了初恋的感觉），还是建议大家去读读这本书然后有自己的认识。现在就觉得，当遇到不懂的就去找本书看，也不用被各种的推送看的一头雾水，你只有去看看更完善的东西，才有自己的理解，一篇文章是看不出啥的。共勉。</p><h1 id="我从区块链中得到了什么"><a href="#我从区块链中得到了什么" class="headerlink" title="我从区块链中得到了什么"></a>我从区块链中得到了什么</h1><p>这部分就写下，我看这本书写下的想法吧。</p><blockquote><p>区块链是一个对人性悲观却非常真诚的协议。</p></blockquote><p>作为一个程序员，我不得不感叹区块链的技术，但我更喜欢的是区块链背后的哲学。区块链背后的思想是很伟大的，接受人性，善也好恶也罢，是对人性的悲观检测，考虑到你可能出现的所有情况，每个人活的都像自己，并不会因为你像自己而对他人造成损失。虽说是去中心化，但也有一套规约，像共识机制，与中心化不同的是我们的行为是对现有制度的屈服（不是来自于个人意志），区块链想做到的是你的决定都是来自你自己理性的判断，你是“自私”的，你会去考虑投入与损失，知道自己该做什么而使自己的利益最大化，是对自由的向往。</p><p>For freedom!!!</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>本文脑图地址：<a href="http://naotu.baidu.com/file/453a9b4bbfa8a7485e97188129cb04a2?token=8e15a160ba9e943e" target="_blank" rel="external">《区块链》</a></p><p>相关文章：<br><a href="http://www.woshipm.com/blockchain/887991.html" target="_blank" rel="external">区块链微信：对不起，你言而无信！</a><br><a href="http://www.woshipm.com/blockchain/870294.html" target="_blank" rel="external">区块链养猫，我们时代的一个不和谐的符号</a></p><p>书籍（电子版可在微信读书app搜索）：<br>《区块链：定义未来金融与经济新格局》（作者：火币网 张健）</p><hr><p>2018.01.27 00:36 -  完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近大家可能被区块链的推送推的烦了，不只是“区块链”，还有这些名词：“炒币”、“挖矿”、“矿工”、“区块链”、“ICO”等。也许由于之前的勒索病毒的影响太大，使得它将用于其支付的比特币推向了白热化，各大媒体都去谈论比特币是什么，“区块链”技术渐渐从极客圈向大众圈扩散，加上比特币汇率的变化（截至写这篇博客BTC/CNY:86655.16），更让其走进了投资圈。我写这篇博客或许也是在蹭热点，但请往下看。&lt;/p&gt;
    
    </summary>
    
      <category term="书籍分享" scheme="http://JohnneyAnn.github.io/categories/%E4%B9%A6%E7%B1%8D%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="读书笔记" scheme="http://JohnneyAnn.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="区块链" scheme="http://JohnneyAnn.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>2017书单</title>
    <link href="http://JohnneyAnn.github.io/2017/12/30/2017%E4%B9%A6%E5%8D%95/"/>
    <id>http://JohnneyAnn.github.io/2017/12/30/2017书单/</id>
    <published>2017-12-29T16:01:09.274Z</published>
    <updated>2017-12-29T16:01:09.270Z</updated>
    
    <content type="html"><![CDATA[<p>2017即将结束，总得做点什么，今天去看看电影版的《解忧杂货铺》（东野圭吾著），给东叔一份尊敬，也给自己一个总结，这是我看的第二本书。</p><a id="more"></a><h1 id="一个偶然"><a href="#一个偶然" class="headerlink" title="一个偶然"></a>一个偶然</h1><p>那时住油坊桥，周末常有小贩摆摊于地铁口，卖些盗版书或小商品。周六下班早，于是在此逗留片刻想淘本有趣的书装一下文化，无奈并不止其内容，也未曾看过&gt;书评，自然不知道哪本该是有趣的。现在想想一本陌生的书对于小白来书，有趣的名字，好看的封面该是他选择的理由，于是，我选择了《皮囊》（蔡崇达著），&gt;因为名字。</p><p>时常在想，我们用来思考的主体是大脑，那我是我的大脑么？我们会去说我想，但不会说大脑想，用我来证明是我在想。再者，我们可能会去说我的大脑在思考，&gt;这种说法该是认为大脑是我的一部分，进而认为大脑不是本我，但是当你在有这个想法的时候，正是大脑在操控着，现在说说到底是谁在想？好了，不在想了，在&gt;想脑袋会炸的，大脑说：其实是我不让你想，想明白咱们就脱离了。或许，就做个皮囊吧，成全大脑的阴谋。</p><p>以上是我看到皮囊两个字的意淫，也不是搞哲学的，就不难为自己。我“强迫”自己看完皮囊，倒不是这本书不好看，是我得改变我晕书的毛病，现在好似做到了。《皮囊》里有个句子很喜欢送给大家：</p><blockquote><p>能真实地抵达这个世界的，能确切地抵达梦想的，不是不顾一切投入想象的狂热，而是务实、谦卑的，甚至你自己都看不起的可怜和隐忍。</p></blockquote><p>看完解忧杂货店电影回来继续写这篇博客。大多数情况下，电影很难去还原原著，这是由于我们看书时根据书中的描述而想象出该有的情景，那么电影可以说是别人的理解放到荧幕展现给你，因此稍有与自己想象不同的情景都是难以接受的，后而去抨击电影摧毁了原著。当然，每个人都有自己对原著的理解这无可厚非，就今天的电影而言，对我来说虽有出处，但好在影片中主要的故事情节都有描述，有泪点也有笑点，觉得将这本书想要表达的内容都表达了，该有的都解释到了，这已经很不错了，我也不太喜欢去谈论演员的演技，情节在能够引起观众的共鸣，这些倒不是很重要。所以，还是推荐给大家，可以一看。</p><p>《解忧杂货铺》这是我看的第二本书，如果说《皮囊》是改变习惯，那这本是真的吸引到我了，让我有了更像看下去的信念，于是又读了东野圭吾的好几本书，后来觉得读书是颇有乐趣的一件事。到现在也看了不少，就把书单写下。</p><h1 id="2017书单"><a href="#2017书单" class="headerlink" title="2017书单"></a>2017书单</h1><h2 id="1-《皮囊》–蔡崇达"><a href="#1-《皮囊》–蔡崇达" class="headerlink" title="1.《皮囊》–蔡崇达"></a>1.《皮囊》–蔡崇达</h2><p>我的第一本书，被名字所吸引，一部有着小说阅读质感的散文集。</p><h2 id="2-《解忧杂货店》–东野圭吾"><a href="#2-《解忧杂货店》–东野圭吾" class="headerlink" title="2.《解忧杂货店》–东野圭吾"></a>2.《解忧杂货店》–东野圭吾</h2><p>前来咨询的人，每个人心中都有了答案，重要的是自己想积极认真的生活。</p><h2 id="3-《追风筝的人》–卡勒德•胡赛尼"><a href="#3-《追风筝的人》–卡勒德•胡赛尼" class="headerlink" title="3.《追风筝的人》–卡勒德•胡赛尼"></a>3.《追风筝的人》–卡勒德•胡赛尼</h2><p>“为你，千千万万遍”。</p><h2 id="4-《嫌疑人X的献身》-–东野圭吾"><a href="#4-《嫌疑人X的献身》-–东野圭吾" class="headerlink" title="4.《嫌疑人X的献身》 –东野圭吾"></a>4.《嫌疑人X的献身》 –东野圭吾</h2><p>推理小说，前有柯南后有东野圭吾，哈哈。</p><h2 id="5-《岛上书店》-–加布瑞埃拉泽文"><a href="#5-《岛上书店》-–加布瑞埃拉泽文" class="headerlink" title="5.《岛上书店》 –加布瑞埃拉泽文"></a>5.《岛上书店》 –加布瑞埃拉泽文</h2><p>我们读书而后知道自己并不孤独。</p><h2 id="6-《我们仨》-–杨绛"><a href="#6-《我们仨》-–杨绛" class="headerlink" title="6.《我们仨》 –杨绛"></a>6.《我们仨》 –杨绛</h2><p>爱是生活的点滴。生离固然痛苦，可死别才是不见啊。</p><h2 id="7-《无声告白》-–伍绮诗"><a href="#7-《无声告白》-–伍绮诗" class="headerlink" title="7.《无声告白》 –伍绮诗"></a>7.《无声告白》 –伍绮诗</h2><p>我们终此一生，就是摆脱他人的期待，找到真正的自己。</p><h2 id="8-《乖，摸摸头》-–大冰"><a href="#8-《乖，摸摸头》-–大冰" class="headerlink" title="8.《乖，摸摸头》 –大冰"></a>8.《乖，摸摸头》 –大冰</h2><p>发生在大冰身边的真实故事，我们喜欢看故事，然后想到自己。</p><h2 id="9-《阿弥陀佛么么哒》-–大冰"><a href="#9-《阿弥陀佛么么哒》-–大冰" class="headerlink" title="9.《阿弥陀佛么么哒》 –大冰"></a>9.《阿弥陀佛么么哒》 –大冰</h2><p>同上，看完之后及其向往自由。。。</p><h2 id="10-《白夜行》-–东野圭吾"><a href="#10-《白夜行》-–东野圭吾" class="headerlink" title="10.《白夜行》 –东野圭吾"></a>10.《白夜行》 –东野圭吾</h2><p>推理。不必提醒你还只是个孩子。</p><h2 id="11-《人人都是产品经理》-–苏杰"><a href="#11-《人人都是产品经理》-–苏杰" class="headerlink" title="11.《人人都是产品经理》 –苏杰"></a>11.《人人都是产品经理》 –苏杰</h2><p>算是影响很大的书，对于没有学习软件工程的我，帮助我去理解公司的一些东西，告诉我该怎么做。博客名就是模仿苏杰的。。。</p><h2 id="12-《这么慢，那么美》-–罗敷"><a href="#12-《这么慢，那么美》-–罗敷" class="headerlink" title="12.《这么慢，那么美》 –罗敷"></a>12.《这么慢，那么美》 –罗敷</h2><p>一本介绍北欧的书，一定要去一次！</p><h2 id="13-《逻辑思维：迷茫时代的明白人》-–罗振宇"><a href="#13-《逻辑思维：迷茫时代的明白人》-–罗振宇" class="headerlink" title="13.《逻辑思维：迷茫时代的明白人》 –罗振宇"></a>13.《逻辑思维：迷茫时代的明白人》 –罗振宇</h2><p>上次说的卖焦虑的那个家伙，哈哈，但确实有很多观点，有经济也有历史，还算有趣。</p><h2 id="14-《逻辑思维：中国为什么有前途》–罗振宇"><a href="#14-《逻辑思维：中国为什么有前途》–罗振宇" class="headerlink" title="14.《逻辑思维：中国为什么有前途》–罗振宇"></a>14.《逻辑思维：中国为什么有前途》–罗振宇</h2><p>分析历史，证明未来。</p><h2 id="15-《一本书看懂经济学》-–庆裕"><a href="#15-《一本书看懂经济学》-–庆裕" class="headerlink" title="15.《一本书看懂经济学》 –庆裕"></a>15.《一本书看懂经济学》 –庆裕</h2><p>科普类读物。有很多与生活贴切的例子，与社会心理学有交叉，就觉得这些都一样。博弈论、囚徒困境不就是心理战么- -，还有《三体》中的猜疑链，社会学也一样。</p><h2 id="16-《人生十讲》-–季羡林"><a href="#16-《人生十讲》-–季羡林" class="headerlink" title="16.《人生十讲》 –季羡林"></a>16.《人生十讲》 –季羡林</h2><p>人吃饭时为了活着，但活着绝不是为了吃饭。</p><h2 id="17-《飞鸟集》-–泰戈尔"><a href="#17-《飞鸟集》-–泰戈尔" class="headerlink" title="17.《飞鸟集》 –泰戈尔"></a>17.《飞鸟集》 –泰戈尔</h2><p>诗集类，花花草草木木，清新风，双语读的，道行太浅，体会不深。</p><h2 id="18-《神探伽利略》-–东野圭吾"><a href="#18-《神探伽利略》-–东野圭吾" class="headerlink" title="18.《神探伽利略》 –东野圭吾"></a>18.《神探伽利略》 –东野圭吾</h2><p>5个推理小故事，东叔比较爱物理。</p><h2 id="19-《当我们在谈论爱情时我们在谈论什么》-–雷蒙德•卡佛"><a href="#19-《当我们在谈论爱情时我们在谈论什么》-–雷蒙德•卡佛" class="headerlink" title="19.《当我们在谈论爱情时我们在谈论什么》 –雷蒙德•卡佛"></a>19.《当我们在谈论爱情时我们在谈论什么》 –雷蒙德•卡佛</h2><p>描述的并不是优美的爱情故事，而是将不好的全部展示出来，结局留白的写作手法吸引了很多人的喜爱。最重要的观点，你并不知道自己在谈论什么。</p><h2 id="20-《活出生命的意义》-–维克多•弗兰克尔"><a href="#20-《活出生命的意义》-–维克多•弗兰克尔" class="headerlink" title="20.《活出生命的意义》 –维克多•弗兰克尔"></a>20.《活出生命的意义》 –维克多•弗兰克尔</h2><p>心理学书籍，作者从集中营出来后写的，被压迫的过去需要调节，提出的“意义疗法”很适用。</p><h2 id="21-《愿你迷路到我身旁》-–蕊希"><a href="#21-《愿你迷路到我身旁》-–蕊希" class="headerlink" title="21.《愿你迷路到我身旁》 –蕊希"></a>21.《愿你迷路到我身旁》 –蕊希</h2><p>微信读书送的，情情爱爱什么的，也硬着头皮看完了，大家还是别看了。</p><h2 id="22-《我这一生都比别人跑得慢》-–东土大唐"><a href="#22-《我这一生都比别人跑得慢》-–东土大唐" class="headerlink" title="22.《我这一生都比别人跑得慢》 –东土大唐"></a>22.《我这一生都比别人跑得慢》 –东土大唐</h2><p>左手编程，右手文学。榜样啊，84篇，来自于生活，很有趣。</p><h2 id="23-《周鸿祎自述：我的互联网方法论》-–周鸿祎"><a href="#23-《周鸿祎自述：我的互联网方法论》-–周鸿祎" class="headerlink" title="23.《周鸿祎自述：我的互联网方法论》 –周鸿祎"></a>23.《周鸿祎自述：我的互联网方法论》 –周鸿祎</h2><p>科技大佬都在出书，周老板这本该叫我的360成功之路，当然某些观点还是适用的。</p><h2 id="24-《湖畔》-–东野圭吾"><a href="#24-《湖畔》-–东野圭吾" class="headerlink" title="24.《湖畔》 –东野圭吾"></a>24.《湖畔》 –东野圭吾</h2><p>推理之下是对现实的拷问，父母为了孩子逾越道德的界线。</p><h2 id="25-《哥伦比亚的倒影》-–木心"><a href="#25-《哥伦比亚的倒影》-–木心" class="headerlink" title="25.《哥伦比亚的倒影》 –木心"></a>25.《哥伦比亚的倒影》 –木心</h2><p>读木心深知自己不足，语言简约意味深长。</p><h2 id="26-《道德经》-–老子"><a href="#26-《道德经》-–老子" class="headerlink" title="26.《道德经》 –老子"></a>26.《道德经》 –老子</h2><p>第三遍，也手抄了一些，真的是博大精深，得慢慢体会。道无为而无所不为。</p><h2 id="27-《马云：未来以来》-–阿里巴巴集团"><a href="#27-《马云：未来以来》-–阿里巴巴集团" class="headerlink" title="27.《马云：未来以来》 –阿里巴巴集团"></a>27.《马云：未来以来》 –阿里巴巴集团</h2><p>是马爸爸的演讲，主要就是几个观点，企业要考虑为社会做什么，企业要考虑未来的事等等。</p><h2 id="28-《从0到1-开启商业与未来的秘密》-–蒂尔•马斯特斯"><a href="#28-《从0到1-开启商业与未来的秘密》-–蒂尔•马斯特斯" class="headerlink" title="28.《从0到1:开启商业与未来的秘密》 –蒂尔•马斯特斯"></a>28.《从0到1:开启商业与未来的秘密》 –蒂尔•马斯特斯</h2><p>科技大佬热议之书来自paypel黑帮之首。阐述了自己的创业历程与心得，找到自己的利基市场。</p><h2 id="29-《三体》（全集）-–刘慈欣"><a href="#29-《三体》（全集）-–刘慈欣" class="headerlink" title="29.《三体》（全集） –刘慈欣"></a>29.《三体》（全集） –刘慈欣</h2><p>包含地球往事、黑暗森林和死神永生三册。推荐了很多次，提出宇宙社会学的概念，将一切放到宇宙的尺度去衡量，阐述文明的历程，实为震撼。</p><h2 id="30-《咖啡原来是这样的啊》-–童铃"><a href="#30-《咖啡原来是这样的啊》-–童铃" class="headerlink" title="30.《咖啡原来是这样的啊》 –童铃"></a>30.《咖啡原来是这样的啊》 –童铃</h2><p>咖啡科普，介绍不同地区的咖啡与文化，有些许装X的韵味，但学习并不是一件坏事，丰富自己的知识体系。</p><h2 id="31-《社会心理学》-–Elliot-Aronson"><a href="#31-《社会心理学》-–Elliot-Aronson" class="headerlink" title="31.《社会心理学》 –Elliot Aronson"></a>31.《社会心理学》 –Elliot Aronson</h2><p>解释社会行为，当我们对我们所处的社会有更理性的认识。</p><h2 id="32-《浮生六记》-–沈复"><a href="#32-《浮生六记》-–沈复" class="headerlink" title="32.《浮生六记》 –沈复"></a>32.《浮生六记》 –沈复</h2><p>自传散文体小说，写给芸的绝美情书，目前仅剩四记，描述了闲情逸致、悲欢离合、人情事态等等，读者能够感受作者的情绪，久久不能平静。</p><p>……还有些没看完的，遗漏的就不一一列举了，能记得的都是觉得不错的</p><p><strong>以下是听书，听书大多听个大概，不太占时间，这里举一些有趣的：</strong></p><h2 id="33-《宇宙的结构》"><a href="#33-《宇宙的结构》" class="headerlink" title="33.《宇宙的结构》"></a>33.《宇宙的结构》</h2><p>听书。我们希望能够有效的解释我们所处的世界，基础物理学解释不了的有量子力学，在解释不了的有弦理论。</p><h2 id="34-《万物起源》"><a href="#34-《万物起源》" class="headerlink" title="34.《万物起源》"></a>34.《万物起源》</h2><p>听书。宇宙来自虚无、生命源于偶遇、文明离不开想象力，意外结论的背后是科学的支撑。</p><h2 id="35-《文明的冲突与世界秩序的重建》"><a href="#35-《文明的冲突与世界秩序的重建》" class="headerlink" title="35.《文明的冲突与世界秩序的重建》"></a>35.《文明的冲突与世界秩序的重建》</h2><p>听书。用“文明”的角度解读世界格局与未来。</p><h2 id="36-《米开朗基罗传》"><a href="#36-《米开朗基罗传》" class="headerlink" title="36.《米开朗基罗传》"></a>36.《米开朗基罗传》</h2><p>艺术家不是拥有天赋就可以练成，还需要付出艰苦的努力甚至生命。</p><h2 id="37-《梵高传》"><a href="#37-《梵高传》" class="headerlink" title="37.《梵高传》"></a>37.《梵高传》</h2><p>用生命描绘自己的艺术和心灵。</p><h2 id="38-《拜占庭帝国》"><a href="#38-《拜占庭帝国》" class="headerlink" title="38.《拜占庭帝国》"></a>38.《拜占庭帝国》</h2><p>拜占庭孕育了欧洲文艺复兴的伟大文明，但最终还是走向了灭亡。</p><h2 id="39-《罗马帝国衰亡史》"><a href="#39-《罗马帝国衰亡史》" class="headerlink" title="39.《罗马帝国衰亡史》"></a>39.《罗马帝国衰亡史》</h2><p>一步步阐述罗马帝国如何走向衰落，具体可看之前的博客。</p><h2 id="40-《乌合之众》"><a href="#40-《乌合之众》" class="headerlink" title="40.《乌合之众》"></a>40.《乌合之众》</h2><p>大众心理学研究，之前有提过。</p><h2 id="41-《怪诞行为学》"><a href="#41-《怪诞行为学》" class="headerlink" title="41.《怪诞行为学》"></a>41.《怪诞行为学》</h2><p>这对学习心理学、行为经济学、研究用户都很有帮助。</p><h2 id="42-《活法》"><a href="#42-《活法》" class="headerlink" title="42.《活法》"></a>42.《活法》</h2><p>稻盛和夫独特的人生哲学，最令人印象深刻的三个观点：一、从简单的原则出发考虑问题；二、设定超出现有能力的高目标；三、努力到连老天爷都出手相助（工作现场有神明）。</p><h2 id="43-《干法》"><a href="#43-《干法》" class="headerlink" title="43.《干法》"></a>43.《干法》</h2><p>稻盛和夫：工作是一种修行，是洗涤灵魂的过程。</p><p>……</p><h1 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h1><p>想看的东西太多，苦于时间不够，恨不得能一口吃了。</p><p>读书就像吃饭，吃完了虽然排了出去，但是正在帮助你成长。只有不断的去学习，丰富自己的知识体系，才能存活于未来。</p><p>最近可能是到了年终，就想写点东西啊。</p><hr><p>2017.12.29 23.53 完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017即将结束，总得做点什么，今天去看看电影版的《解忧杂货铺》（东野圭吾著），给东叔一份尊敬，也给自己一个总结，这是我看的第二本书。&lt;/p&gt;
    
    </summary>
    
      <category term="书籍分享" scheme="http://JohnneyAnn.github.io/categories/%E4%B9%A6%E7%B1%8D%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="读书笔记" scheme="http://JohnneyAnn.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="记录" scheme="http://JohnneyAnn.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>尼尔森十大可用性原则</title>
    <link href="http://JohnneyAnn.github.io/2017/12/28/%E5%B0%BC%E5%B0%94%E6%A3%AE%E5%8D%81%E5%A4%A7%E5%8F%AF%E7%94%A8%E6%80%A7%E5%8E%9F%E5%88%99/"/>
    <id>http://JohnneyAnn.github.io/2017/12/28/尼尔森十大可用性原则/</id>
    <published>2017-12-28T15:52:19.731Z</published>
    <updated>2017-12-28T15:52:19.731Z</updated>
    
    <content type="html"><![CDATA[<p>尼尔森的十大可用性原则是于1995年1月1日发表，来自交互设计的一位web易用性大师——Jakob Nielsen人机交互学博士（Technical University of Denmark in Copenhagen）。<br><a id="more"></a></p><h1 id="一、Visibility-of-system-status-系统可见性原则（状态可见）"><a href="#一、Visibility-of-system-status-系统可见性原则（状态可见）" class="headerlink" title="一、Visibility of system status 系统可见性原则（状态可见）"></a>一、Visibility of system status 系统可见性原则（状态可见）</h1><p>系统应该让用户知道发生了什么，在适当的时间内做出适当的反馈。用户在网页上的任何操作，不论是单击、滚动还是按下键盘，页面应即时给出反馈。“即时”是指，页面响应时间小于用户能忍受的等待时间。</p><p>IDEA：我们在表单中对用户填写的信息进行实时校验；提供数据加载提示、数据加载进度；点击按钮按钮状态改变等等</p><h1 id="二、Match-between-system-and-the-real-world-匹配系统与真实世界（环境贴切）"><a href="#二、Match-between-system-and-the-real-world-匹配系统与真实世界（环境贴切）" class="headerlink" title="二、Match between system and the real world 匹配系统与真实世界（环境贴切）"></a>二、Match between system and the real world 匹配系统与真实世界（环境贴切）</h1><p>系统应该用用户的语言，用词，短语和用户熟悉的概念，而不是系统术语。遵循现实世界的惯例，让信息符合自然思考逻辑。大多数流通的翻译是针对网页的：网页的一切表现和表述，应该尽可能贴近用户所在的环境（年龄、学历、文化、时代背景），而不要使用第二世界的语言。</p><p>IDEA：对于按钮图标我们使用用户一眼就能看出其作用的图标，也就是尽可能的模拟真实世界，对用户反馈的信息使用用户熟悉的表述和名字，如错误提醒等。早前看深泽值人的提出的“无意识设计”，这对可供性设计有很好的阐述。可供性是物体或环境与生物体之间的一种关系，通过刺激的收集，提供给生物体表现出动作的机会。作为一种关系，可供性是动作的可能性，既不是环境也不是生物体单独的性质。当人们与环境发生无意识关联时，是处于最自然的状态的，这会降低用户的学习成本，如看到“垃圾桶”图标自然就知道这是删除类操作等。另外的就是根据用户群体，产生与用户的共鸣，多些情感化的东西，使其更贴近用户的生活，人机关系总是感性大于理性。</p><h1 id="三、User-control-and-freedom用户的控制性和自由度（撤销重作原则）"><a href="#三、User-control-and-freedom用户的控制性和自由度（撤销重作原则）" class="headerlink" title="三、User control and freedom用户的控制性和自由度（撤销重作原则）"></a>三、User control and freedom用户的控制性和自由度（撤销重作原则）</h1><p>用户经常错误地选择系统功能而且需要明确标识离开这个的“出口”，而不需要通过一个扩展的对话框。要支持撤销和重做的功能。大多数流通的翻译是针对网页的：为了避免用户的误用和误击，网页应提供撤销和重做功能。</p><p>IDEA：之前写的笔记系统，添加了回收站功能，用户可去回收站去复原删除的数据，当时的设计思路是对表结构的更改，增加一个标识列区分正常、删除、永久删除三个状态，这确实也是一种方法。后来发现并不是所有系统都具有回收站功能，或者基于已有表结构是难以走这条路的，并且真实的删除操作需要用户去自己去操作才可以，这就不合适了。看过一些不错的网站他们会在用户删除时会有一个小的悬浮框，用户可在短时间内选择撤销，为选择则在框消失后真实删除，我没有去查证他们怎么去实现的，自己想了一个法子。对于网页来说，我们可以去在用户删除的时候做一个悬浮框在其消失时去删除这并不难，但考虑用户如果在提示框消失之前点击了刷新或其他操作导致页面中心加载，那在前端的这个操作可能就失效了，或许可以去监听页面刷新的操作，在操作之前提前执行真实删除就能够达到目的。对于可以修改表结构，用户也希望不用自己收到去清空，我们可以添加标识列，在后台执行定时操作，删除在某一时间范围内的数据，这些只是目前的想法不保证正确性，回头去写个DEMO来测试。</p><h1 id="四、Consistency-and-standards一致性和标准化（一致性原则）"><a href="#四、Consistency-and-standards一致性和标准化（一致性原则）" class="headerlink" title="四、Consistency and standards一致性和标准化（一致性原则）"></a>四、Consistency and standards一致性和标准化（一致性原则）</h1><p>用户不必怀疑是否不同的语言，不同的情景，或者不同的操作产生的结果实际上是同一件事情。遵循平台的惯例。也就是，同一用语、功能、操作保持一致。</p><p>IDEA：这个是极其常见的了，节目风格的一致性，引导用户操作的一致性。</p><h1 id="五、Error-prevention-防错原则"><a href="#五、Error-prevention-防错原则" class="headerlink" title="五、Error prevention 防错原则"></a>五、Error prevention 防错原则</h1><p>比出现错误信息提示更好的是更用心的设计防止这类问题发生。在用户选择动作发生之前，就要防止用户容易混淆或者错误的选择。对于网页来说：通过网页的设计、重组或特别安排，防止用户出错。</p><p>IDEA：经常会说把用户当小白，将用户可能犯的错都考虑到，通过我们的设计使其避免，比如，删除时给出确认提示框，提示框按钮位置的编排，按钮样式的突出，多重防止误操作。</p><h1 id="六、Recognition-rather-than-recall-识别比记忆好（易取原则）"><a href="#六、Recognition-rather-than-recall-识别比记忆好（易取原则）" class="headerlink" title="六、Recognition rather than recall 识别比记忆好（易取原则）"></a>六、Recognition rather than recall 识别比记忆好（易取原则）</h1><p>尽量减少用户对操作目标的记忆负荷，动作和选项都应该是可见的。用户不必记住一个页面到另一个页面的信息。系统的使用说明应该是可见的或者是容易获取的。尽可能减少用户回忆负担，把需要记忆的内容摆上台面。</p><p>IDEA：还是说删除提示，删除提示应当给出必要的提示信息，告诉用户他刚刚做了什么操作，现在需要他确认什么，用户不必去回想刚刚点了啥操作。</p><h1 id="七、Flexibility-and-efficiency-of-use使用的灵活高效（灵活高效原则）"><a href="#七、Flexibility-and-efficiency-of-use使用的灵活高效（灵活高效原则）" class="headerlink" title="七、Flexibility and efficiency of use使用的灵活高效（灵活高效原则）"></a>七、Flexibility and efficiency of use使用的灵活高效（灵活高效原则）</h1><p>中级用户的数量远高于初级和高级用户数。为大多数用户设计，不要低估，也不可轻视，保持灵活高效。</p><p>IDEA：对于一些博客网站，提供Markdown编辑器，一般用户只需记住语法就可以写作，我觉得这是属于中级用户的，但也提供XHTML语言以及富文本编辑器，这样就满足了不同层次用户的需求，为大多数用户设计，兼容少部分特殊用户，如果只有Markdown，那用户会流失很多。</p><h1 id="八、Aesthetic-and-minimalist-design-审美和简约的设计（易扫原则）"><a href="#八、Aesthetic-and-minimalist-design-审美和简约的设计（易扫原则）" class="headerlink" title="八、Aesthetic and minimalist design 审美和简约的设计（易扫原则）"></a>八、Aesthetic and minimalist design 审美和简约的设计（易扫原则）</h1><p>对话中不应该包含无关紧要的信息。在段落中每增加一个单位的重要信息，就意味着要减少相应的弱化一些其他信息。互联网用户浏览网页的动作不是读，不是看，而是扫。易扫，意味着突出重点，弱化和剔除无关信息。</p><p>IDEA：看过一个广告行业的研究：人类的平均注意力时长从2000年的12秒下将到现在为8妙。这是个快节奏的时代，适应这些变化自然要做些改变，突出有用的内容，用户可快速捕获到重点信息，另外对于用户不关心的，我们能够帮用户完成的就不劳烦他大驾了，给个间断的提示就行。</p><h1 id="九、Help-users-recognize-diagnose-and-recover-from-errors-帮助用户识别，诊断，并从错误中恢复（容错原则）"><a href="#九、Help-users-recognize-diagnose-and-recover-from-errors-帮助用户识别，诊断，并从错误中恢复（容错原则）" class="headerlink" title="九、Help users recognize, diagnose, and recover from errors 帮助用户识别，诊断，并从错误中恢复（容错原则）"></a>九、Help users recognize, diagnose, and recover from errors 帮助用户识别，诊断，并从错误中恢复（容错原则）</h1><p>错误信息应该用语言表达（不要用代码），较准确地反应问题所在，并且提出一个建设性的解决方案。大多数流通的翻译是针对网页的：帮助用户从错误中恢复，将损失降到最低。如果无法自动挽回，则提供详尽的说明文字和指导方向，而非代码，比如404。</p><p>IDEA：当页面发生错误时，不提供报错信息，采用友好的故障界面，并提供用户能够明白的说明，告诉用户现在可以做什么，如回到首页，返回上一步等。我们的系统对404页面确实做了调整。</p><h1 id="十、Help-and-documentation-帮助文档（人性化帮助原则）"><a href="#十、Help-and-documentation-帮助文档（人性化帮助原则）" class="headerlink" title="十、Help and documentation  帮助文档（人性化帮助原则）"></a>十、Help and documentation  帮助文档（人性化帮助原则）</h1><p>如果系统不使用文档是最好的，但是有必要提供帮助和文档。任何信息应容易去搜索，专注于用户的任务，列出具体的步骤来进行。帮助性提示最好的方式是：1、无需提示；2、一次性提示；3、常驻提示；4；帮助文档。</p><p>IDEA：上文说到一个好的系统应当是无意识设计，是具备可供性的，但有时确实有必要提供一些提示帮助用户去理解。我们的系统中有一个工具模块，目前还是一个页面里面的嵌入功能，这个模块用户的学习成本较高，想达到想要的效果确实有难度，用户在使用时定会不知所措，未来缓解这部分的尴尬，目前采取常驻提示作为临时处理方案，用户可查看当前工具可以做什么，可以去进行哪些操作、如何操作。对于系统层面，部门对未使用过我们系统的人提供帮助文档。其他方面如表单填写是使用placeholder或其他的提示信息对用户容易产生困惑的敏感信息进行提醒。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>牢记这些可用性原则，在实现功能是在尽可能的情况下去遵循这些原则，任务时间充裕的情况下根据系统实际情况调整并执行，对旧模块进行微调。同样，在代码层面规范代码，参考阿里巴巴规约，优化逻辑，提高响应。</p><p><hr></p><p>2017.12.28 23:46完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尼尔森的十大可用性原则是于1995年1月1日发表，来自交互设计的一位web易用性大师——Jakob Nielsen人机交互学博士（Technical University of Denmark in Copenhagen）。&lt;br&gt;
    
    </summary>
    
      <category term="产品" scheme="http://JohnneyAnn.github.io/categories/%E4%BA%A7%E5%93%81/"/>
    
    
      <category term="设计" scheme="http://JohnneyAnn.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="学习" scheme="http://JohnneyAnn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>公司这个团体</title>
    <link href="http://JohnneyAnn.github.io/2017/12/26/%E5%85%AC%E5%8F%B8%E8%BF%99%E4%B8%AA%E5%9B%A2%E4%BD%93/"/>
    <id>http://JohnneyAnn.github.io/2017/12/26/公司这个团体/</id>
    <published>2017-12-25T16:00:02.808Z</published>
    <updated>2017-12-25T16:00:02.808Z</updated>
    
    <content type="html"><![CDATA[<p>企业招人与用人方面该是怎么样的？作为公司团体中的一员确实很想了解清楚。这个高度有点高了，我们常说我们部门的人是服务员，服务于公司其他各个部门，那么，我算的上是一个底层服务员。作为底层服务员去大谈公司团体的科学方法论可能确实有点滑稽，但也是想记下现在的想法、推论，在以后学习更多的东西来回首去证明之，抑或是推翻之。<br><a id="more"></a></p><h1 id="招人的门槛"><a href="#招人的门槛" class="headerlink" title="招人的门槛"></a>招人的门槛</h1><p>大多数公司招人喜欢985、211等名校毕业的，这有它的道理。对于公司来说，应届生没有经验，实践能力也不能很快就看出来，那么你来自一个好学校就是对你之前20多年的一份满意的答卷，至少从这可以看出你算是优秀的，这对以后的你来说也是一个很好的根基。学校分三六九等，不同学校的教学质量，学生素质自然有所差别。这句话颇很正确，也有以偏概全之意，学生作为学校群体中的一员，易被去个体化而迷失在人群中，但个体的人格特征也有不可被同化的一部分，这也是值得欣赏的一部分。</p><p>公司的可持续发展离不开人才的引进与培养。来自差学校的是否属于人才？来自好学校的是否属于人才？这些都不敢说，总有些独特的人做着独特的事，因为群体效应形成刻板印象而一棍子打死，这并不智慧。被招进来的人在公司留下的时间由什么来决定？我们从社会心理学中团体认同感及认知失调这两个方面可以去分析。</p><p>在公司停留的时间取决于进入公司的难易程度以及后期公司文化是否给予个体团体认同。大多数情况下，来自于名牌大学学生比来自于其他学校的学生更容易进入一家公司（方法论中的变量只是来自不同的学校，假定在个人能力、公司的规模等其他因素保持一致，否则可能不成立），这种情况出现的比较多，也借此来说明这个问题。有人在的地方就会有抱怨，人们似乎总是认为生活让其饱受摧残。在公司也一样，总有人抱怨公司的种种不满，有不满而离去的，也有不满而继续待下的，前者多为容易进入公司的那批人，后者则是较难的那批。容易进入公司的，对自我有着特别的认同感，也相对自信，认为下一份也该是轻易获得，而对于现在的公司的不满易被放大；较难进入公司的，也会遇到对公司的不满，此类对于公司的不满习惯放小，大多在接受范围之内。工作对于个体来说是得到的东西，不管好与不好，若是你艰难得到的自然会加倍珍惜，是人性也是害怕认知失调。人们也习惯用让自己更容易接受的解释来缓解自己的认知失调，你那么拼命的拿到，如今又不喜欢，对于我们是很难接受的，我们回去寻找有利的信息为我们的决定做支撑，“可能在这一块公司有着不当的地方，但其他地方还不错啊”，这样的想法促使人们去接受而让自身变的轻松。</p><p>对于愿意留下的部分，若留下更长的时间是由于公司文化、价值观与其自身价值观得以契合，自身价值在整个团体中得以体现而留存。面试中，多会考虑被面试者是否认同公司的文化，因此会去问被面试者的价值观，这可能也是出于这方面的考虑，另外，对于已有工作经验的人，会去考虑其离职原因、曾在职时长，可见对于未来员工留存于公司的时间公司是比较在意的。但就校招而言，对于进入公司的难易程度似乎考虑欠缺。</p><p>马云爸爸说清华大学的应该以欣赏的阳光去看待杭州师范大学的学生，杭师大的学生也应当以欣赏的眼光看待自身。对此，我更愿意看成这两所大学是前文提到的两种大学的代表，因此我深信不疑。再来说公司招人，应当给予第二类学校一定的机会，不管对于两类大学的任何一类，其进入公司的难易程度应当保持一致，在几轮面试中进行筛选，不丢失好学校的差生，也不丢失差学校的优生，也能更加明确的pass掉不需要的员工，从而使得来自好学校的学生对公司的认同，来自差学校的学生对公司更加用户，方能就留，为公司创造更多的利益。运用好心理战或许对这些很有帮助。</p><h1 id="团体效应"><a href="#团体效应" class="headerlink" title="团体效应"></a>团体效应</h1><p>团体或群体是社会学、社会心理学一个重要的研究方向，个体组成团体，一个个小团体组成现在我们见到的社会，社会上几乎所有的活动都是团体活动，《乌合之众》这本书对大众心理学有很好的描述，可以帮助我们了解很多社会活动，从某种程度上说，“人以群分”不算是一个完全的贬义词，描述的正是事实。</p><p>团体在公司也很有体现，据社会心理学的解释，团体是两个或两个以上彼此互动、彼此依赖的人，他们的学校和目标使得他们相互影响。那么，公司毫无疑问是团体，我们是为了共同目的而聚集在一起的人。既然是团体，有哪些可以用的上的心理学知识？</p><p>他人在场。他人在场时是否会影响你的行为？他人在场一般分为两种情况，一是其他人跟自己做同一件事，二是其他人只是观察你做事而自己并不做。他人在场是否会促进我们的工作效率呢，这想必很多人都会关心。会，也不会。这得分两种情况：简单任务与复杂任务。想象一下，让你做一件简单的事，对你而言做这件事就像是第二本能，熟悉的不能再熟悉，相必你能够快而好的完成这件事，有效率也有质量（你急与想表现自己），倘若这件事较为复杂或者是让你学习新知识，你该开始担心的，你担心领导会不会给你较坏的评价，这会让你在这项任务上表现更差。人们总是对其他人如何评价自己非常关系。</p><p>对于管理者来说，当要求你的员工完成一些相当简单的任务时，给他增加点评价焦虑不是一件坏事，这能够提供工作效率，但如果其个人努力得不到评估，就不能让其和别人做同一件事，这会引起他的懈怠；对于复杂任务，你则需要降低其评价焦虑，可将其编排在团体内，个人的表现不会得到评价，这里也叫责任分担，效绩可能会更好。</p><p>人们乐于去表现自己，而不愿意得到坏的评价。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>如果公司的价值观、现状、人事都与预期的差不太多，并没有与自身的愿景背道而驰，就该去学习，也愿意待的时间更长一点，现在需要的还是积累，现在常谈的是佛系90后，这种调侃也是人们想借助此来消除当前所处的焦虑，担心的并非是脱发、恐老，而是是否能如佛学思想般静心，若能静心，自然没什么好担心。</p><p>圣诞快乐。</p><p><hr></p><p>2017.12.25 23:55完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;企业招人与用人方面该是怎么样的？作为公司团体中的一员确实很想了解清楚。这个高度有点高了，我们常说我们部门的人是服务员，服务于公司其他各个部门，那么，我算的上是一个底层服务员。作为底层服务员去大谈公司团体的科学方法论可能确实有点滑稽，但也是想记下现在的想法、推论，在以后学习更多的东西来回首去证明之，抑或是推翻之。&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://JohnneyAnn.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="愚见" scheme="http://JohnneyAnn.github.io/tags/%E6%84%9A%E8%A7%81/"/>
    
      <category term="心理学" scheme="http://JohnneyAnn.github.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
      <category term="工作" scheme="http://JohnneyAnn.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL存储过程</title>
    <link href="http://JohnneyAnn.github.io/2017/12/23/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://JohnneyAnn.github.io/2017/12/23/MySQL存储过程/</id>
    <published>2017-12-23T01:30:36.133Z</published>
    <updated>2017-12-23T01:30:36.133Z</updated>
    
    <content type="html"><![CDATA[<p>有这样一个需求，从A表中查询出结果，作为B表插入的查询条件，之后循环查询并插入。从网上看了些解决方案，这里写了一个存储过程的DEMO。<br><a id="more"></a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> SELECT_4_INSERT;<span class="comment">-- 若存在此存储过程先删除</span></div><div class="line"></div><div class="line">DELIMITER $$ <span class="comment">-- 定义结束符 避免与存储过程中“;”冲突 语句到"$$"才算结束</span></div><div class="line"></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> SELECT_4_INSERT() <span class="comment">-- 创建存储过程</span></div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="comment">-- 定义结束标识 用于判断是否结束循环 也可以用FALSE，MYSQL认为非0为TRUE</span></div><div class="line"><span class="keyword">DECLARE</span> DONE <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;  </div><div class="line"><span class="comment">-- 用于存储结果集的记录 这里的记录只有一列 多列需要定义多个 VARCHAR需指定长度</span></div><div class="line"><span class="keyword">DECLARE</span> STYPE <span class="built_in">VARCHAR</span>(<span class="number">128</span>);  </div><div class="line"><span class="comment">-- 定义游标 使用游标进行遍历</span></div><div class="line"><span class="keyword">DECLARE</span> STYPE_CURSOR <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> DATA_TYPE <span class="keyword">FROM</span> BASE_STYPE_INFO <span class="keyword">WHERE</span> <span class="keyword">ID</span> &gt; <span class="number">1000000</span>;</div><div class="line"><span class="comment">-- 定义 结束标识DONE何时改变</span></div><div class="line"><span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> DONE = <span class="number">1</span>; </div><div class="line"></div><div class="line"><span class="comment">-- 打开游标</span></div><div class="line">OPEN STYPE_CURSOR;</div><div class="line"></div><div class="line"><span class="comment">-- 循环开始</span></div><div class="line">REPEAT</div><div class="line"><span class="comment">-- 可FETCH多列 需对应上</span></div><div class="line">FETCH STYPE_CURSOR INTO STYPE;</div><div class="line"><span class="comment">-- 结果集没读完则继续</span></div><div class="line">IF NOT DONE THEN</div><div class="line"><span class="comment">-- 假设这里需要做一下类型转换 使用CAST将字符转成数值</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> BASE_OTHER_TABLE(<span class="keyword">ID</span>, TYPE_NAME, CREATE_TIME) </div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">ID</span>+<span class="number">1000000</span> <span class="keyword">ID</span>, <span class="string">'TEST'</span> TYPE_NAME, <span class="number">1563445355</span> CREATE_TIME <span class="keyword">FROM</span> BASE_ANOTHER_TABLE</div><div class="line"><span class="keyword">WHERE</span> <span class="keyword">TYPE</span> = <span class="keyword">CAST</span>(STYPE <span class="keyword">AS</span> SIGNED);</div><div class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</div><div class="line">UNTIL DONE <span class="keyword">END</span> <span class="keyword">REPEAT</span>;</div><div class="line"></div><div class="line"><span class="comment">-- 关闭游标</span></div><div class="line">CLOSE STYPE_CURSOR;</div><div class="line"><span class="comment">-- 循环结束</span></div><div class="line"><span class="keyword">END</span> $$</div><div class="line"></div><div class="line">DELIMITER;<span class="comment">-- 结束符恢复</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">-- 调用存储过程</span></div><div class="line"><span class="keyword">CALL</span> SELECT_4_INSERT();</div><div class="line"></div><div class="line"><span class="comment">-- 若为临时存储过程 调用完删除</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> SELECT_4_INSERT;</div></pre></td></tr></table></figure></p><p>还有一种情况，将A表中的查询结果全部塞到B表中，只做一些字段匹配调整，可直接使用INSERT…SELECT…</p><p>A表中字段：ID FIRST_NAME LAST_NAME GENDER<br>B表中字段：ID NAME FLAG HOBBIES</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> BASE_B_INFO(<span class="keyword">ID</span>, NAM, FLAG, HOBBIES)</div><div class="line"><span class="keyword">SELECT</span> <span class="keyword">ID</span>+<span class="number">1000000</span> <span class="keyword">ID</span>, <span class="keyword">CONCAT</span>(FIRST_NAME, LAST_NAME) <span class="keyword">NAME</span> , <span class="number">0</span> FLAG ,<span class="string">'无'</span> HOBBIES </div><div class="line"><span class="keyword">FROM</span> BASE_A_INFO</div></pre></td></tr></table></figure><p><hr></p><p>2017.12.23 00:13</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有这样一个需求，从A表中查询出结果，作为B表插入的查询条件，之后循环查询并插入。从网上看了些解决方案，这里写了一个存储过程的DEMO。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://JohnneyAnn.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="mysql" scheme="http://JohnneyAnn.github.io/tags/mysql/"/>
    
      <category term="存储过程" scheme="http://JohnneyAnn.github.io/tags/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>后焦虑思考</title>
    <link href="http://JohnneyAnn.github.io/2017/12/17/%E5%90%8E%E7%84%A6%E8%99%91%E6%80%9D%E8%80%83/"/>
    <id>http://JohnneyAnn.github.io/2017/12/17/后焦虑思考/</id>
    <published>2017-12-17T15:24:21.183Z</published>
    <updated>2017-12-17T15:24:21.179Z</updated>
    
    <content type="html"><![CDATA[<p>焦虑是不是这个时代的产物？<br>这周又体会到了焦虑，是什么导致了焦虑？你的焦虑来自于自身还是外界？<br>我生活在这个时代，很难去考证上个时代的人们是否同我一样有各种焦虑，也可能每个时代的焦虑都不一样，我想说的是我处在的焦虑，那就这个时代吧。<br><a id="more"></a></p><h1 id="焦虑"><a href="#焦虑" class="headerlink" title="焦虑"></a>焦虑</h1><p>个人认为，来自于自身的焦虑是自己能够去感知自己的不足而产生的焦虑，这种焦虑可能是正性的，能够意识到自己不足从而促进个人的提升，既然是可能，意味着也不排除破罐子破摔的情况存在。而来自外界的焦虑是别人向你灌输你存在不足从而促进你去接受这个思想而产生的焦虑，其中有一种情况很常见，大多是环境的影响或是商家的手段：“别人都在做而你没有或者你做的与别人不一样”。</p><br><p>举个例子，几个月前开始使用的一款app，得到。罗振宇老师创办的，提供的是知识服务，通俗点说是卖知识的。于我这个刚步入社会，眼界小的可怜的喽啰来说，说发现新大陆一点也不过分，早期可谓是如饥似渴，打开软件，启动图上显示的“和你一起终身学习、一起建设一所终生大学”，瞬间感觉自己有了文化，正在知识的海洋里翻滚。从小到大没有看过什么书，这里的一切都是新鲜的，可以看到很多的观点，也因此看完了罗振宇老师的书，我把时间安排的死死的。正如得到app的核心思想嘛，“利用碎片化时间终生学习”。公交车上、洗澡、上厕所、排队我都在听，每天充实的要死。几个月后，我也能跟你说说什么新奇的观点，可是我更焦虑了。这么多知识我怎么才能看的完？看完忘了怎么办？本想消除我无知的焦虑，却加剧了我的无知，带来了时间上的焦虑和生活上的疲惫。这时就有人发言了：“罗胖子啊，你这哪是卖知识，你这是在卖焦虑啊”。</p><br><p>这个例子我说的两种焦虑都包含，我不仅感受了焦虑也感受了疲惫。这个时候就该反思了，是罗胖子的说法对还是这个路人甲的发言对？我回顾了下，我是前期听罗胖子的，中期听路人甲的，后期决定中庸。都对，都不对。否则岂不是又陷入焦虑？来分析下，罗胖子要我们学习，学习是好事啊，我们就应该终身学习是吧，这是一个有经验的人对其他人的忠告；罗胖子也是个商人，无形之中给我们灌输的是“小笨蛋们，想变聪明嘛，用得到app才行啊！”，这与我们来说肯定觉得是不对的，但对于一个商人来说无可厚非；再看看路人甲，他说出来罗胖子作为商人的行为，很正确，问题在于如何去选择是他自己的事。</p><br><p>以上仅代表个人观点。“得到”现在还在我的手机里，我还在用，不同的是不再觉得看了“得到”就有文化（不被商家左右），就不傻了，而是把他当作一个渠道、一个娱乐方式，没有去刻意的使用，强迫自己今天必须要听多少。每个人情况都有所不同，你工作累了想放松你大可回来花半个小时听听舒缓的歌，强迫自己去接受知识带着负面情绪还怎么赚钱？还是要随心嘛。目前的时代确实是碎片化的，当“碎片化”被提及是，带来了电子书的回春，碎片化知识服务产业的兴起，电子书也不是单纯的看书了多了讲书，电台也开始有知识服务了，还有知乎一小时系列等等。有人说这个好，有人说那个好，不可能照单全收，否责又陷入焦虑了。知识是学不完的，不是说你没有使用某个app你就错过了一些知识，也不是你用了某个app就高人一等，每个人都有自己的选择，这类软件1-2个足以。最最主要的是你要选择你喜欢的软件，选择软件里提供的你感兴趣的内容，不要被别人左右。学你感兴趣的才是学习，你不知道想知道的才是知识。</p><br><p>我目前手机里有“微信读书”和“得到”，“微信读书”用的多，可以看到很多有趣的书，“得到”呢只偶尔无聊时使用它的“每天听本书”栏目，只是偶尔，有时间还是喜欢看而不是听。听的都是别人的见解，看的才能有自己的想法。</p><h1 id="公司团建前后"><a href="#公司团建前后" class="headerlink" title="公司团建前后"></a>公司团建前后</h1><h2 id="团建前"><a href="#团建前" class="headerlink" title="团建前"></a>团建前</h2><p>时间：2017.12.16 星期六 方山汽摩基地 冷但有阳光</p><br><p>这是来公司的第一次集体出去活动，自然不能缺席，也十分期待周六的活动。这是个令人高兴的事，但是如果周六时间用来团建，那本周的工作则需要在周六之前完成。从周会上来看，本周的工作完成肯定不会需要太长的时间，然而我已经不会再那么天真了（/手动摊手），早早就有了心里准备，活来了，焦虑也来了。是无知的焦虑，我一直觉得既然工作了就不应该有什么不会的，不会就去学呗，别人会自己也能吧，这次的活能够去了解其他部门的东西，还是觉得很有趣，后来严重受挫。老板和同事都在指点帮助我理解，我还是出错还是在纠结，时间花掉却没能输出成果或者说没能输出满意的结果。连续加了四晚的班，我想还有一部分时间是在焦虑，来自自身的焦虑。想把这件事完成的焦虑，还有其他事的焦虑，自己是否能胜任这个工作的焦虑，后而自身不足的焦虑。也希望我能够像理解“得到”式焦虑那样消除这些焦虑。</p><h2 id="团建中"><a href="#团建中" class="headerlink" title="团建中"></a>团建中</h2><p>去了有30多人吧，第一感觉：这是谁…我们部门的么。好在与我预想的一样，第一个活动是趣味游戏，于参加过上次联谊的我来说（/手动尴尬一把），这简直就是一个”神器“，能够最短时间放下大家的”偶像“包袱，打成一片。而且，做完还很暖和…</p><br><p>真人CS，没见过世面的人第一次玩，听说是激光枪，开始各种脑补炫酷的场景，到了现场第一感受，这怕是要拼一波演技咯。穿上装备，fire in the hole！还好，不全靠演技，被击中和击中都是有感应的，后来也有点套路。跑的很开心，大家都在笑，还有个别同事可能在地上打了个滚…有一点要吐槽的是场地太小了，那么多小房子，怎么不能进去捡装备呢！</p><br><p>中午来自助烧烤，以前大学团建户外烧烤是租的小炉子，看到眼前的大炉子心里竟然还有点爽，然后我就被浓烟熏的感动哭了。后来坐在炉子的角落，全程只翻了几次肉，后来炒了下鱿鱼，然后还吃着同事递过来的粮食，感谢勤劳的同事不杀之恩。后来，实在是这张吴彦祖的脸我还想要，离开了炉子到外面走了走。</p><br><p>强烈推荐跑跑卡丁车！三圈意犹未尽啊！虽说是老司机，但第一次开这种车，心里还是有点虚，第一圈摸清车的机制、路况，第二圈提速试着急转，第三圈就是放飞自我，虽说不计秋名山车神，也没有炫酷的漂移，但就很帅，总结一个字就是，稳！后来准备混着在上一次，还是下次吧，哈哈。</p><h2 id="团建后"><a href="#团建后" class="headerlink" title="团建后"></a>团建后</h2><p>坐着大巴回公司，路上感受着阳光的沐浴，天气是真的好。想着还有活还没做，就去了公司，写了一个小功能。人最害怕热闹过后的寂静，多愁善感的我一边感伤一边写着代码，然后点开闪烁的消息提醒，被怼了一通，内心是拒绝的，但确实是自己干的活，控制住情绪，准备与怼我者商讨解决方案，似乎他心中确实也有不满，顺着他来，等周一去解决吧。</p><br><p>周末算是一周工作的结束，可以去做自己想做的事，本该开心。但是，如果工作没有完成就不太开心了，这工作的事情没那么好忘，有人说周末应该吧工作忘了好好放松一把，但舒适总要付出代价，想想啊，这些没做完的事周一还是要去解决，还担心自己不一定能够解决，然后处在焦虑下过这个周末，赔了夫人又折兵。若本周的事本周全部能够完成，那该多好啊，开始也确实过过这样的日子。按理说，今日事当今日毕，可计划永赶不上变化，去解决一点再解决一点，希望能够越来越熟悉，早日得心应手。那时，或许还能谈谈追求。</p><h2 id="团结后之后"><a href="#团结后之后" class="headerlink" title="团结后之后"></a>团结后之后</h2><p>这时已经在家了，该是22点许，浑身酸痛，身体在说话：看你着运动缺乏的！坚持一件事很难，大学时跑步坚持了一个月有余，后因天气寒冷而放弃，而跑步这件事坚持三年确能毁于一月，我这坚持一月的怕是谈不上坚持了。读书是从小到大算的上坚持的第一件事，也后悔为何到现在才明白，耽误了这么久，那或许跑步我也能吧，不试试岂不是咸鱼？</p><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>啥展望，明天准备去接受摧残！！</p><h1 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h1><p>最后分享一下这周看的书，整理了一个脑图，关于咖啡的，有兴趣可以看看。</p><p></p><p>点击下面的链接即可。<br>脑图：<a href="http://naotu.baidu.com/file/26cc5fe4d5fe4d8135c7ade6b757ee12?token=2defa3ff44ce869c" target="_blank" rel="external">《咖啡原来是这样的》</a></p><p>有什么想法可以在下方评论。Night.</p><p><hr></p><p>2017.12.17 22:59</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;焦虑是不是这个时代的产物？&lt;br&gt;这周又体会到了焦虑，是什么导致了焦虑？你的焦虑来自于自身还是外界？&lt;br&gt;我生活在这个时代，很难去考证上个时代的人们是否同我一样有各种焦虑，也可能每个时代的焦虑都不一样，我想说的是我处在的焦虑，那就这个时代吧。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://JohnneyAnn.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="愚见" scheme="http://JohnneyAnn.github.io/tags/%E6%84%9A%E8%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>机器学习实战（五）Logistic回归</title>
    <link href="http://JohnneyAnn.github.io/2017/12/01/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98%EF%BC%88%E4%BA%94%EF%BC%89Logistic%E5%9B%9E%E5%BD%92/"/>
    <id>http://JohnneyAnn.github.io/2017/12/01/机器学习实战（五）Logistic回归/</id>
    <published>2017-12-01T13:50:26.704Z</published>
    <updated>2017-12-01T13:50:26.704Z</updated>
    
    <content type="html"><![CDATA[<p>Logistic回归是一种简单的分类算法，提到“回归”，很多人可能觉得与分类没什么关系，Logistic回归通过对数据分类边界的拟合来实现分类。而“回归”也就意味着最佳拟合。要进行最佳拟合，则需要寻找到最佳的拟合参数，一些最优化方法就可以用于最佳回归系数的确定。<br><a id="more"></a></p><h1 id="Logistic回归"><a href="#Logistic回归" class="headerlink" title="Logistic回归"></a>Logistic回归</h1><p><strong>对书中代码做的修改：</strong></p><ul><li>1.修改plotBestFit（wei）参数名称plotBestFit（weights）</li><li>2.移除plotBestFit（）中weights=wei.getA()</li><li>3.分析数据画决策边界调用plotBestFit（weights）时传入weights.getA()，其中weight是gredAscent(dataArr,labelMat)方法的返回值</li></ul><h2 id="LogistiC-回归梯度上升优化算法"><a href="#LogistiC-回归梯度上升优化算法" class="headerlink" title="LogistiC 回归梯度上升优化算法"></a>LogistiC 回归梯度上升优化算法</h2><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">loadDataSet</span><span class="params">()</span>:</span></div><div class="line">    dataMat = []</div><div class="line">    labelMat = []</div><div class="line">    fr = open(<span class="string">'F:\\study\\testSet.txt'</span>)</div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fr.readlines():</div><div class="line">        <span class="comment">#去除空格并拆分</span></div><div class="line">        lineArr = line.strip().split()</div><div class="line">        dataMat.append([<span class="number">1.0</span>, float(lineArr[<span class="number">0</span>]), float(lineArr[<span class="number">1</span>])])</div><div class="line">        labelMat.append(int(lineArr[<span class="number">2</span>]))</div><div class="line">    <span class="keyword">return</span> dataMat,labelMat</div></pre></td></tr></table></figure><h3 id="Sigmoid函数"><a href="#Sigmoid函数" class="headerlink" title="Sigmoid函数"></a>Sigmoid函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">sigmoid函数</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(inX)</span>:</span></div><div class="line">    <span class="keyword">return</span> (<span class="number">1.0</span>/(<span class="number">1</span>+exp(-inX)))</div></pre></td></tr></table></figure><h3 id="LogistiC-梯度上升算法"><a href="#LogistiC-梯度上升算法" class="headerlink" title="LogistiC 梯度上升算法"></a>LogistiC 梯度上升算法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gredAscent</span><span class="params">(dataMatIn, classLabels)</span>:</span></div><div class="line">    <span class="comment">#[[x,x,x],...]</span></div><div class="line">    dataMatrix = mat(dataMatIn)</div><div class="line">    <span class="comment">#将列表转换为矩阵再倒置</span></div><div class="line">    labelMat = mat(classLabels).transpose()</div><div class="line">    <span class="comment">#获取行列</span></div><div class="line">    m,n = shape(dataMatrix)</div><div class="line">    <span class="comment">#向目标移动的步长</span></div><div class="line">    alpha = <span class="number">0.001</span></div><div class="line">    <span class="comment">#迭代次数</span></div><div class="line">    maxCycles = <span class="number">500</span></div><div class="line">    <span class="comment">#回归系数 n=3行1列的单位数组</span></div><div class="line">    weights = ones((n,<span class="number">1</span>))</div><div class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(maxCycles):</div><div class="line">        <span class="comment">#h&gt;0.5 在右边 dataMatrix*weights矩阵相乘100行一列</span></div><div class="line">        <span class="comment">#每次计算所有样本点</span></div><div class="line">        h = sigmoid(dataMatrix*weights)</div><div class="line">        error = (labelMat-h);</div><div class="line">        <span class="comment">#w = w + α▽w f(w)</span></div><div class="line">        <span class="comment">#dataMatrix.transpose() 3行100列  error 100行1列  相乘后3，1</span></div><div class="line">        weights = weights + alpha * dataMatrix.transpose()*error</div><div class="line">    <span class="keyword">return</span> weights</div></pre></td></tr></table></figure><ul><li>1.解析文本，文本中有100个样本点，前两列代表点的数值型特征X1,X2，最后一列为分类标签</li><li>2.设置回归系数初始值为1（为单位矩阵，每个样本点对应一个回归系数，设置回归系数行数等于样本点的列数，实现倒置），步长为0.001，训练次数500</li><li>3.计算z=wTx,带入sigmod获取结果，将结果与分类标签计算误差值</li><li>4.根据误差值方向调整回归系数（梯度迭代公式，梯度简化为数据样本与错误量相乘[见上篇博客公式推导]）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">查看效果</span></div><div class="line"><span class="string">"""</span></div><div class="line">dataArr,labelMat = loadDataSet()</div><div class="line">weights = gredAscent(dataArr,labelMat)</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">分析数据：画出决策边界</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotBestFit</span><span class="params">(weights)</span>:</span></div><div class="line">    dataMat,labelMat = loadDataSet()</div><div class="line">    dataArr = array(dataMat)</div><div class="line">    <span class="comment"># n = 100</span></div><div class="line">    n = shape(dataArr)[<span class="number">0</span>]</div><div class="line">    xcord1 = []; ycord1 = []</div><div class="line">    xcord2 = []; ycord2 = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">        <span class="keyword">if</span> int(labelMat[i]) == <span class="number">1</span>:</div><div class="line">            xcord1.append(dataArr[i, <span class="number">1</span>]); ycord1.append(dataArr[i,<span class="number">2</span>])</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            xcord2.append(dataArr[i, <span class="number">1</span>]); ycord2.append(dataArr[i,<span class="number">2</span>])</div><div class="line">    <span class="comment"># 创建画布</span></div><div class="line">    fig = plt.figure()</div><div class="line">    ax = fig.add_subplot(<span class="number">111</span>)</div><div class="line">    <span class="comment"># 画标签为1的点</span></div><div class="line">    ax.scatter(xcord1, ycord1, s=<span class="number">30</span>, c=<span class="string">'red'</span>, marker=<span class="string">'p'</span>)</div><div class="line">    <span class="comment"># 画标签为0的点</span></div><div class="line">    ax.scatter(xcord2, ycord2, s=<span class="number">30</span>, c=<span class="string">'green'</span>)</div><div class="line">    <span class="comment">#创建决策边界线</span></div><div class="line">    x = arange(<span class="number">-3.0</span>, <span class="number">3.0</span>, <span class="number">0.1</span>)</div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    设置sigmod函数值为0,0是两个分类的分界处，可解出x，y的关系式</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="comment"># 0 = w0*x0 + w1*x + w2*y  =&gt;  y = -(w0 + w1*x)/w2</span></div><div class="line">    y = (-weights[<span class="number">0</span>]-weights[<span class="number">1</span>]*x)/weights[<span class="number">2</span>] <span class="comment">#最佳拟合线</span></div><div class="line">    ax.plot(x,y)</div><div class="line">    plt.xlabel(<span class="string">'X1'</span>);plt.ylabel(<span class="string">'X2'</span>);</div><div class="line">    plt.show()</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">查看效果</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</div><div class="line"><span class="comment"># 传入返回的回归系数(书中有误，因此修改了plotBestFit的传参，也为了后面随机梯度可共用</span></div><div class="line"><span class="comment">#另外需要定义weights将gredAscent的值赋给weights)</span></div><div class="line">%matplotlib inline</div><div class="line"><span class="comment"># getA()将自身矩阵转化为ndarray类型的变量，等价于asarray(self)</span></div><div class="line">plotBestFit(weights.getA())</div></pre></td></tr></table></figure><p><img src="/img/logistic/1.png" alt="分析数据"></p><h2 id="随机梯度上升算法"><a href="#随机梯度上升算法" class="headerlink" title="随机梯度上升算法"></a>随机梯度上升算法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">一次仅用一个样本点来更新回归系数</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">stocGradAscent0</span><span class="params">(dataMatrix, classLabels)</span>:</span></div><div class="line">    m,n=shape(dataMatrix)</div><div class="line">    alpha = <span class="number">0.01</span></div><div class="line">    weights = ones(n)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</div><div class="line">        <span class="comment">#每次计算一个样本点</span></div><div class="line">        h = sigmoid(sum(dataMatrix[i]*weights))</div><div class="line">        error = classLabels[i] - h</div><div class="line">        weights = weights + alpha*error*dataMatrix[i]</div><div class="line">    <span class="keyword">return</span> weights</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">查看效果</span></div><div class="line"><span class="string">"""</span></div><div class="line">dataArr,labelMat = loadDataSet()</div><div class="line">weights = stocGradAscent0(array(dataArr),labelMat)</div><div class="line">plotBestFit(weights)</div></pre></td></tr></table></figure><p><img src="/img/logistic/2.png" alt="分析数据"></p><h2 id="改进的随机梯度上升算法"><a href="#改进的随机梯度上升算法" class="headerlink" title="改进的随机梯度上升算法"></a>改进的随机梯度上升算法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">改进的随机梯度上升算法</span></div><div class="line"><span class="string">alpha在每次迭代的时候都会调整，随着迭代次数不断减小，但永远不会到0</span></div><div class="line"><span class="string">每次从样本中随机取出一个样本更新回归系数，之后将改值从列表中删除，进行下次迭代</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">stocGradAscent1</span><span class="params">(dataMatrix, classLabels, numIter=<span class="number">150</span>)</span>:</span></div><div class="line">    m,n = shape(dataMatrix)</div><div class="line">    weights = ones(n)</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(numIter):</div><div class="line">        <span class="comment"># 每个样本的编号[0,..,99]</span></div><div class="line">        dataIndex = range(m)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</div><div class="line">            <span class="string">"""</span></div><div class="line"><span class="string">            步长alpha每次迭代时需要调整，每次减少1/(i+j)</span></div><div class="line"><span class="string">            档j&lt;&lt;max(i),alpha就不是严格下降的。</span></div><div class="line"><span class="string">            避免参数严格下降也常见于模拟退火算法（SAA)等其他优化算法中</span></div><div class="line"><span class="string">            """</span></div><div class="line">            alpha = <span class="number">4</span>/(<span class="number">1.0</span>+j+i)+<span class="number">0.01</span></div><div class="line">            <span class="comment"># numpy.random.uniform(low,high,size)在给定区间[0,100)内随机取样，注意是左闭右开</span></div><div class="line">            <span class="comment"># size输出样本数目，int或元组，缺省时输出一个值</span></div><div class="line">            randIndex = int(random.uniform(<span class="number">0</span>,len(dataIndex)))</div><div class="line">            <span class="comment"># 求和 即计算z = w0x0+w1*x1+w2*x2  随机选取样本计算h</span></div><div class="line">            h = sigmoid(sum(dataMatrix[randIndex]*weights))</div><div class="line">            error = classLabels[randIndex] - h</div><div class="line">            weights = weights + alpha * error * dataMatrix[randIndex]</div><div class="line">            <span class="comment"># 样本被使用后去除 在此次迭代内dataIndex长度每次减1</span></div><div class="line">            <span class="keyword">del</span>(dataIndex[randIndex])</div><div class="line">    <span class="keyword">return</span> weights</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">查看效果</span></div><div class="line"><span class="string">"""</span></div><div class="line">dataArr,labelMat = loadDataSet()</div><div class="line">weights = stocGradAscent1(array(dataArr),labelMat)</div><div class="line">plotBestFit(weights)</div></pre></td></tr></table></figure><p><img src="/img/logistic/3.png" alt="分析数据"></p><h2 id="从疝气病症预测病马的死亡率"><a href="#从疝气病症预测病马的死亡率" class="headerlink" title="从疝气病症预测病马的死亡率"></a>从疝气病症预测病马的死亡率</h2><h3 id="处理数据中的缺失值"><a href="#处理数据中的缺失值" class="headerlink" title="处理数据中的缺失值"></a>处理数据中的缺失值</h3><p><strong>可选的做法</strong></p><blockquote><p>使用可用特征的均值来填补缺失值；<br>使用特殊值来填补缺失值，如-1;<br>忽略有缺失值的样本；<br>使用相似样本的均值添补缺失值；<br>使用另外的机器学习算法预测缺失值。</p></blockquote><p>numpy不允许包含缺失值，选择实数0来替换所有缺失值，恰好能适用于Logistic回归<br>我们需要的是一个在更新是不会影响系数的值，根据回归系数的更新公式<br>w = w + a <em> e </em> dataMatrix[randIndex],若dataMatrix的某特征对应值为0,则系数不做更新w=w，另外sigmoid(0)=0.5，对结果的预测不具有任何的倾向性</p><h3 id="Logistic回归分类函数"><a href="#Logistic回归分类函数" class="headerlink" title="Logistic回归分类函数"></a>Logistic回归分类函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">classifyVector</span><span class="params">(inX, weights)</span>:</span></div><div class="line">    prob = sigmoid(sum(inX*weights))</div><div class="line">    <span class="keyword">if</span> prob &gt; <span class="number">0.5</span>: <span class="keyword">return</span> <span class="number">1.0</span></div><div class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="number">0.0</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">colicTest</span><span class="params">()</span>:</span></div><div class="line">    frTrain = open(<span class="string">'F:\study\horseColicTraining.txt'</span>)</div><div class="line">    frTest = open(<span class="string">'F:\study\horseColicTest.txt'</span>)</div><div class="line">    trainingSet = []; trainingLabels = []</div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> frTrain.readlines():</div><div class="line">        currLine = line.strip().split(<span class="string">'\t'</span>)</div><div class="line">        lineArr = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">21</span>):</div><div class="line">            lineArr.append(float(currLine[i]))</div><div class="line">        trainingSet.append(lineArr)</div><div class="line">        trainingLabels.append(float(currLine[<span class="number">21</span>]))</div><div class="line">    trainWeights = stocGradAscent1(array(trainingSet), trainingLabels, <span class="number">500</span>)</div><div class="line">    errorCount = <span class="number">0</span>; numTestVec = <span class="number">0.0</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> frTest.readlines():</div><div class="line">        numTestVec += <span class="number">1.0</span></div><div class="line">        currLine = line.strip().split(<span class="string">'\t'</span>)</div><div class="line">        lineArr = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">21</span>):</div><div class="line">            lineArr.append(float(currLine[i]))</div><div class="line">        <span class="keyword">if</span> int(classifyVector(array(lineArr), trainWeights)) != int(currLine[<span class="number">21</span>]):</div><div class="line">            errorCount += <span class="number">1</span></div><div class="line">    errorRate = (float(errorCount)/numTestVec)</div><div class="line">    <span class="keyword">print</span> <span class="string">"the error rate of this test is: %f"</span> % errorRate</div><div class="line">    <span class="keyword">return</span> errorRate</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiTest</span><span class="params">()</span>:</span></div><div class="line">    numTests = <span class="number">10</span>; errorSum=<span class="number">0.0</span></div><div class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(numTests):</div><div class="line">        errorSum += colicTest()</div><div class="line">    <span class="keyword">print</span> <span class="string">"after %d iterations the average error rate is: %f"</span> % (numTests, errorSum/float(numTests))</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">运行时报D:\Anaconda2\lib\site-packages\ipykernel\__main__.py:5: </span></div><div class="line"><span class="string">RuntimeWarning: overflow encountered in exp警告</span></div><div class="line"><span class="string">说明计算的数据结果溢出了，忽略也无妨，查过说可以调整sigmoid函数，</span></div><div class="line"><span class="string">使用longfloat()来解决溢出，但没有解决，还在寻找解决办法。。</span></div><div class="line"><span class="string">"""</span></div><div class="line">multiTest()</div></pre></td></tr></table></figure><pre><code>D:\Anaconda2\lib\site-packages\ipykernel\__main__.py:5: RuntimeWarning: overflow encountered in expthe error rate of this test is: 0.298507the error rate of this test is: 0.402985the error rate of this test is: 0.268657the error rate of this test is: 0.298507the error rate of this test is: 0.283582the error rate of this test is: 0.402985the error rate of this test is: 0.388060the error rate of this test is: 0.328358the error rate of this test is: 0.388060the error rate of this test is: 0.417910after 10 iterations the average error rate is: 0.347761</code></pre><h2 id="总结（来自书中）"><a href="#总结（来自书中）" class="headerlink" title="总结（来自书中）"></a>总结（来自书中）</h2><blockquote><p>Logistic回归的目的是寻找一个非线性函数sigmoid的最佳拟合参数，求解过程可以由最优化<br>算法来完成。在最优化算法中，最常用的就是梯度上升算法，而梯度上升算法又可以简化为随机<br>梯度上升算法。<br>随机梯度上升算法与梯度上升算法的效果相当，但占用更少的计算资源。此外，随机梯度上<br>升是一个在线算法，它可以在新数据到来时就完成参数更新，而不需要重新读取整个数据集来进<br>行批处理运算。<br>机器学习的一个重要问题就是如何处理缺失数据。这个问题没有标准答案，取决于实际应用<br>中的需求。现有一些解决方案，每种方案都各有优缺点。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Logistic回归是一种简单的分类算法，提到“回归”，很多人可能觉得与分类没什么关系，Logistic回归通过对数据分类边界的拟合来实现分类。而“回归”也就意味着最佳拟合。要进行最佳拟合，则需要寻找到最佳的拟合参数，一些最优化方法就可以用于最佳回归系数的确定。&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://JohnneyAnn.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="机器学习" scheme="http://JohnneyAnn.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://JohnneyAnn.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Logistic回归部分公式推导</title>
    <link href="http://JohnneyAnn.github.io/2017/11/27/Logistic%E5%9B%9E%E5%BD%92%E9%83%A8%E5%88%86%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/"/>
    <id>http://JohnneyAnn.github.io/2017/11/27/Logistic回归部分公式推导/</id>
    <published>2017-11-27T13:56:01.420Z</published>
    <updated>2017-11-27T13:56:01.420Z</updated>
    
    <content type="html"><![CDATA[<p>代码的转换跳跃太大，还得自己去推到一边才知道下句代码为什么这样写。<br>数学：你还是不是栽在我手里！<br><a id="more"></a></p><h1 id="直接上图片"><a href="#直接上图片" class="headerlink" title="直接上图片"></a>直接上图片</h1><p><img src="/img/logistic/logistic.jpg" alt="回归公式推倒"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码的转换跳跃太大，还得自己去推到一边才知道下句代码为什么这样写。&lt;br&gt;数学：你还是不是栽在我手里！&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://JohnneyAnn.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="机器学习" scheme="http://JohnneyAnn.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>醒来</title>
    <link href="http://JohnneyAnn.github.io/2017/11/27/%E9%86%92%E6%9D%A5/"/>
    <id>http://JohnneyAnn.github.io/2017/11/27/醒来/</id>
    <published>2017-11-27T13:38:44.197Z</published>
    <updated>2017-11-27T13:38:44.197Z</updated>
    
    <content type="html"><![CDATA[<p>《醒来》<br><a id="more"></a></p><p>我在这醒来<br>看着周围漆黑一片<br>可能是深渊<br>或者是<br>我的境遇</p><p>我用尽力气<br>睁大眼睛<br>可光<br>藏掩的厉害<br>唤不起她</p><p>我感到绝望<br>但我不能停下</p><p>我试着行走<br>摸索<br>终于触碰到了温暖<br>是这片黑暗给予的温存<br>我尝试抱起它<br>无果</p><p>我想<br>我带不走它<br>带走的<br>是它给的信念</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《醒来》&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://JohnneyAnn.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>一周记事</title>
    <link href="http://JohnneyAnn.github.io/2017/11/10/%E4%B8%80%E5%91%A8%E8%AE%B0%E4%BA%8B/"/>
    <id>http://JohnneyAnn.github.io/2017/11/10/一周记事/</id>
    <published>2017-11-10T14:01:53.264Z</published>
    <updated>2017-11-10T14:01:53.264Z</updated>
    
    <content type="html"><![CDATA[<p>不知该用哪句话开头，就把纠结该写什么开头这个事实写在前面，消除自己的尴尬，着实机智。<br><a id="more"></a></p><h1 id="来自工作"><a href="#来自工作" class="headerlink" title="来自工作"></a>来自工作</h1><p>这周有点忙碌，感觉自己对很多事都把控不了，工作这样，生活也是这样。工作上有好几个活，我是那种希望把这件事做完再去做下一件事的人，但明显对于现在的工作事不合适的。对接不同的人，你都要去处理，这周哪些工作要结束，都必须记着，在这周的开始信誓旦旦的觉得能完成，做着做着就发现自己有很多情况没有考虑到，会遇到难点，会遇到不熟悉的点，导致开发计划很难在一定的时间完成。之前陈老板说过我们不要任务下来就写代码，应该先去思考怎么去实现，想好方案再去编码。确实这样，这可能是我们这些菜鸟程序猿的通病，以为编码才是干活，导致后期做了很多无用功，写到一半才发现这个方式不合适，一个方案是硬着头皮写下去，写出来的东西永远达不到想要的效果，还有就是重新编码，浪费了一大部分时间。欲善其事，先利其器，大概就是这个道理。还有一个问题，我们在实现一个功能的时候，自认为写的很厉害，用了很好的技术，有些比较亮的点，可是完全没啥用，代码是给你自己看的，老板关系的是你的功能实没实现，是不是在期限内完成的，用户关心的是你有没有我要的功能，好不好用，体验怎么样，管你代码怎么实现的。这个毛病得改。</p><br><p>陈老板我不知道他的年纪，大概知道他在公司待了7年，感觉他什么都知道，还记得刚来的时候看着他敲命令，那手速瞠目结舌，简直就是偶像，也是我觉得程序员后来该有的样子。接了一个活，需要自己评估开发时长，真的是有点懵的，我大概知道需要根据自身情况来估测一个时间，但心里没底。人天生有具有对比性，如果有一个人已经开发过差不多的功能，我会去询问，好估测一个左右的时间，这样自己所说的时间不会太长，也不会太短。项目组几个人都出差去了，没人问，说实话，他们能力比我强，真的问到了可能与我也相差甚大。于是，我问了陈老板，我见过他估过工时。陈老板给了些建议，还是因人而已吧，虽说开发并不稳定，估计时间与实际时间可能毫无关系，但还是觉得估计时间至少是个度，不能偏离太多，可能这就是我一个菜鸡年轻的想法吧。想多问问陈老板一些东西，我想知道他工作这几年是怎么度过的，该去做哪些事，工作伊始是否也有过我现在的迷茫、胆怯、无助，7年之后也能否像他这样，这些我都想知道。</p><br><p>总有时间紧迫的时候，那如果去实现一个功能，大多只是为了去实现这个功能吧。说自己没有一点想法是不可能的，但没时间给你那么多时间去实现你的想法，这种情况我们得听从，我们经验太少，接触面窄，可能我们认为想法根本不适用，对于这样的情况，我觉得如果真的有想法可以提，被老板反驳才知道自己缺什么，等我们更深入，接触的更多才会产生更多的想法，更多有意义的想法。</p><br><p>算是万幸，这周好歹也将其中的一件工作结束了，虽然还得去完善。</p><br><br><h1>来自工作之外</h1><br><p>后来养成读书的习惯，也不知道算不算习惯，但现在很喜欢，读书深知自己不足，每周都会去读一点，去看朋友推荐的书，也看自己偶然看到的书。公司楼下也有读书的地方，虽然没太多时间待在那，但有总是觉得不错的。之前几天中午没睡觉下去看的《罗辑思维》，能够看到很多不错的想法，以后有空还是会多去去的。最近看的很多人推荐的《三体》，一共三部，看了很长时间，快两部了。我觉得作者在写这本书的时候定事凌驾于上帝之上的，在感叹作者脑洞之大的同时，也感受着作者笔下的宇宙观，一种大局感，当三体危机真的来临之时，人类的道德底线是否会打破？这些都值得深思。科幻小说难就难在虚幻的同时，须做到给人们做到正确的科普引导，这些作者都做到了，看的很震撼。</p><br><p>今天，还有一件“伟大”的事，400多页双栏的《社会心理学》主要部分也已经看完了。从6月到现在11月，每天中午看一点，周末也看一点，终于看完了。这本书陪我度过了一段艰难的时光，很多生活中经常发生的事在书中被描述出来，让我们能够去理解我们的行为，正确的描述能够使人变得理性。当时看这本书并不是为了去深入学习心理学，只是希望能够调整自己的情绪，对于我来说只能算是科普读物了，现在看来效果还算不错。虽说，现在也偶尔悲伤发作，大多是触情触景，所听所视导致病情发作，但也说明我确确实实是个人，回头想想以前也是美好的。书中社会认知、自我认识、从众、团体、人际吸引、态度、偏见这些我还能记起来的章节感受颇深，终于明白原来这么回事的感觉真好。</p><br><p>生活所迫，自然不可远足，希望能够在书里打开心的世界，算是一种慰藉，虽然现在众多书籍内容都向往自由，自己也心之神往，但现在也只能想想。等到有资格去谈论追求之时，必愿行万里路。</p><blockquote><p>梦想、希望、家乡、远方总是被诗人提起，只是因为它们和姑娘押韵。     </p></blockquote><p>今晚大家很多都在等着12点啦清空购物车吧，还记得去年还会去抢卷淘好货，或许是因为今年这个时候太忙，或许是因为今年没有人带。现在来选选，买点自己需要的东西，算是应了马爸爸为我们创建的节日。</p><br><p>这周工作日结束，虽然工作日除了工作，看会书没什么消遣。但为了健康阳光的生活周末还是要出去逛逛的！！谁说程序猿就必须宅着邋遢发福（再过一段时间我把“发福”这个词去掉）！！最多就脱个发，那也是急的。明天白天去加班，晚上去看电影放松下心情，生活还是充满无限可能的（／手动微笑）。</p><br><hr><br><p>2017.11.10 21.57</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不知该用哪句话开头，就把纠结该写什么开头这个事实写在前面，消除自己的尴尬，着实机智。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://JohnneyAnn.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>九月九日重阳</title>
    <link href="http://JohnneyAnn.github.io/2017/11/05/%E4%B9%9D%E6%9C%88%E4%B9%9D%E6%97%A5%E9%87%8D%E9%98%B3/"/>
    <id>http://JohnneyAnn.github.io/2017/11/05/九月九日重阳/</id>
    <published>2017-11-05T06:59:20.018Z</published>
    <updated>2017-11-05T06:59:20.014Z</updated>
    
    <content type="html"><![CDATA[<p>又是一年重阳，又是一年生日。今年有些不同，好像也没什么不同。<br><a id="more"></a></p><blockquote><p>发生于2017.10.28 星期六</p></blockquote><p>今年生日赶巧，是在星期六，早早做好了打算，想出去玩一下。一个人在南京，一个人在旅行，虽说都是一个人，但心里总想着这两种情况是不一样的，或许只是认为出去走走就是有事可做，更有意义。我想过把之前走过的地方再走一遍，也想着能够多去一些新的地方，一些之前约定想去的地方。我想去厦门，当然这次没去成，两天的时间太短暂了，好友早前约定我去上海找他，好像时间也太赶，自然也不尽兴。</p><br><p>生日的前一天，还是决定回一趟合肥，家的地方确实是不一样的，朋友在那边还是多些，我也没地方可去，我想热闹点，今年生日与以前不太一样。</p><br><p>毕业以后，朋友偶尔小聚，高中朋友或者大学朋友，大多是我组织的。工作了身不由己，大家都一样，能聚起来实属不易，工作重要。如果朋友有事来不了，这些我都理解，没事的肯定都愿意来聚一聚。这次回去和阿亮一起，本来可以早点回去的，等他花了些时间，他非要和我一起。我告诉他，我喜欢一个人坐车，这样更有感觉，好像在寻求某种意境。我在逞强。能够一起回去我心里其实很开心，多少有个伴，嘴上diss他一遍又一遍，心里却开心不已。</p><br><p>到合肥已是深夜，不便打扰太多的人，与他一同去找了我一个室友，晚上一起玩了一番到凌晨，那天确实是个不错的体验。第二天起来需要制定今天的安排，去哪里吃饭，会来多少人，这些都要考虑到。餐厅是让翘楚找的，叫红顶孔雀，最后知道是哑铃推荐的，十分感谢。中午，去餐厅所在的商场吃个饭，顺便去晚上要去的地方踩点。特地问了服务员，这边的菜分量怎么样，她信誓旦旦的告诉觉得管够，真是太单纯相信了她的鬼话。那天就当真的就吃个环境呢，假装一下文艺。这个餐厅适合两三个人一起去，或者和女朋友一起去。</p><br><p>你所期盼的这一天终于来了，终于有了借口将好友聚在一起。这一天过的又那么快，相聚的时间是短暂的，结束了自然要继续个自奔波。我们再去考虑生日的意义是什么，生日是为庆祝多少年前的同一天我们来到这个世上，有时感受着生活对自己的摧残、践踏，这个真的还要庆祝么？不，可能生日对于现在的我们已经变了，大多数的我们愿意将生日看的重一点，也算是庆祝，庆祝生活还给我们留下的一丁点的美好，那就是还能相聚的我们，这一丁点就够了，这是生日于我现在的意义。</p><br><p>想到大学的生日过的也算滋润，有室友的陪伴，还有她。第一年，去了一个DIY厨房，我做了可乐鸡翅，还有蜡烛；第二年我收到一个相册；第三年还是DIY，这次室友也在，我只摆了几个盘子。平淡的滋润。如今，不能再经历这些平淡，这些滋润，这些好像让我沉醉了许久，睡到现在，于是我改名醒来。</p><br><p>另外在这我许个愿。</p><br><hr><br><p>记于 2017.11.05 03.22</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是一年重阳，又是一年生日。今年有些不同，好像也没什么不同。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="记录" scheme="http://JohnneyAnn.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="随笔" scheme="http://JohnneyAnn.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>CytoscapeJS实现ER图</title>
    <link href="http://JohnneyAnn.github.io/2017/10/20/CytoscapeJS%E5%AE%9E%E7%8E%B0ER%E5%9B%BE/"/>
    <id>http://JohnneyAnn.github.io/2017/10/20/CytoscapeJS实现ER图/</id>
    <published>2017-10-20T07:05:49.197Z</published>
    <updated>2017-10-20T07:05:49.197Z</updated>
    
    <content type="html"><![CDATA[<p>Cytoscape.js是一个很好的实现关系图的js组件。最近用的比较多，这里记录下如何用CytoscapeJS实现类ER图。</p><p>这是官方文档： <a href="http://js.cytoscape.org/" target="_blank" rel="external">Cytoscape.js</a>   </p><p>这是GitHub地址：<a href="https://github.com/cytoscape/cytoscape.js" target="_blank" rel="external">GitHub-Cytoscape.js</a><br><a id="more"></a></p><p></p><p>一开始用的是力导向图，后来发现这样很难表现出表内字段关系，于是就想着用来实现ER图。</p><p></p><p></p><p>下面是写的一个小Demo，数据是自己造的，写在了文件里，具体数据还需做写修改，这里只提供一个思路。</p><p></p><h1 id="主要包含三个文件"><a href="#主要包含三个文件" class="headerlink" title="主要包含三个文件"></a>主要包含三个文件</h1><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p>此文件里给一个div作为Cytoscape的容器,并引入需要的文件<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">utf-8</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"cy"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/cytoscape.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/code.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h2><p>此文件给作为Cytoscape容器的div定一些样式，该容器需要指定宽和高<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123; </div><div class="line">  <span class="attribute">font</span>: <span class="number">14px</span> helvetica neue, helvetica, arial, sans-serif;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#cy</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="code-js"><a href="#code-js" class="headerlink" title="code.js"></a>code.js</h2><p>此文件造了些数据，并对数据进行处理（计算位置），最终画入到cytoscape中，具体请到翻到博客底部下载源码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">tableNum,fRow,fCol</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> _ = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      getRandomNum : <span class="function"><span class="keyword">function</span>(<span class="params">n,m</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*(m-n+<span class="number">1</span>)+n);</div><div class="line">      &#125;,</div><div class="line">      createNodesData : <span class="function"><span class="keyword">function</span>(<span class="params">tNum</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> model = &#123;</div><div class="line">          tableNodes:[],</div><div class="line">          fieldNodes:&#123;&#125;</div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tNum; i++)&#123;</div><div class="line">          <span class="keyword">var</span> node = &#123; <span class="attr">id</span>:<span class="string">'t'</span>+i, <span class="attr">name</span>:<span class="string">'表'</span>+i &#125;;</div><div class="line">          <span class="keyword">var</span> param = &#123; <span class="attr">data</span>: node &#125;;</div><div class="line">          model.tableNodes.push(param);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tNum; i++)&#123;</div><div class="line">          model.fieldNodes[<span class="string">'t'</span>+i]=[];</div><div class="line">          <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; _.getRandomNum(<span class="number">1</span>,<span class="number">80</span>); j++)&#123;</div><div class="line">            <span class="keyword">var</span> node = &#123; <span class="attr">id</span>:<span class="string">'t'</span>+i+<span class="string">'-f'</span>+j, <span class="attr">name</span>:<span class="string">'t'</span>+i+<span class="string">'字段'</span>+j &#125;;</div><div class="line">            <span class="keyword">var</span> param = &#123; <span class="attr">data</span>: node &#125;;</div><div class="line">            model.fieldNodes[<span class="string">'t'</span>+i].push(param);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> model;</div><div class="line">      &#125;,</div><div class="line">      createEdgesData : <span class="function"><span class="keyword">function</span>(<span class="params">model</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> edgesER = [];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; model.tableNodes.length; i++)&#123;</div><div class="line">          <span class="keyword">var</span> edge = &#123; <span class="attr">source</span>:model.fieldNodes[model.tableNodes[i].data.id][model.fieldNodes[model.tableNodes[i].data.id].length<span class="number">-1</span>].data.id,</div><div class="line">                       target:model.fieldNodes[model.tableNodes[<span class="number">0</span>].data.id][<span class="number">0</span>].data.id &#125;</div><div class="line">          <span class="keyword">var</span> param = &#123; <span class="attr">data</span>:edge, <span class="attr">classes</span>:<span class="string">'fieldRelation'</span> &#125;;</div><div class="line">          edgesER.push(param);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> edgesER;</div><div class="line">      &#125;,</div><div class="line">      figureNodesPosition : <span class="function"><span class="keyword">function</span>(<span class="params">model,fRow,fCol</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> nodesER = [];</div><div class="line">        nodesER.push(&#123;<span class="attr">data</span>: &#123; <span class="attr">id</span>: <span class="string">'main'</span>, <span class="attr">name</span>: <span class="string">'ER图'</span> &#125;&#125;);</div><div class="line">        <span class="keyword">var</span> fieldXOffset = <span class="number">0</span>,fieldYOffset = <span class="number">40</span>,fieldRow = fRow,fieldCol = fCol;</div><div class="line">        <span class="keyword">var</span> maxX = <span class="number">0</span>,maxY = <span class="number">0</span>,entityXOffset=<span class="number">200</span>;</div><div class="line">        <span class="keyword">var</span> outLoopNum = <span class="number">0</span>,cols=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; model.tableNodes.length; i++)&#123;</div><div class="line">          cols += <span class="built_in">parseInt</span>(model.fieldNodes[model.tableNodes[i].data.id].length/fieldRow)+<span class="number">1</span>;</div><div class="line">          model.tableNodes[i].data.parent = <span class="string">'main'</span>;</div><div class="line">          nodesER.push(model.tableNodes[i]);</div><div class="line">          <span class="keyword">var</span> tempJ = <span class="number">0</span> ;</div><div class="line">          <span class="keyword">var</span> innerLoopNum = <span class="number">0</span>;</div><div class="line">          <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j&lt;model.fieldNodes[model.tableNodes[i].data.id].length; j++)&#123;</div><div class="line">            <span class="keyword">if</span>(<span class="built_in">parseInt</span>((j/fieldRow)-innerLoopNum)==<span class="number">1</span>)&#123;<span class="comment">//字段切换到下一列</span></div><div class="line">                fieldXOffset = <span class="number">180</span>*(++innerLoopNum);</div><div class="line">                tempJ = <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">            model.fieldNodes[model.tableNodes[i].data.id][j].data.parent = model.tableNodes[i].data.id;</div><div class="line">            model.fieldNodes[model.tableNodes[i].data.id][j].classes = <span class="string">'cyField'</span>;</div><div class="line">            model.fieldNodes[model.tableNodes[i].data.id][j].position = &#123; <span class="attr">x</span>: maxX+fieldXOffset, <span class="attr">y</span>: maxY+fieldYOffset*tempJ &#125;;</div><div class="line">            tempJ++;</div><div class="line">            nodesER.push(model.fieldNodes[model.tableNodes[i].data.id][j]);</div><div class="line">          &#125;</div><div class="line">          fieldXOffset=<span class="number">0</span>;<span class="comment">//每个实体字段渲染完成后fieldXOffset清零</span></div><div class="line">          <span class="keyword">if</span>(innerLoopNum==<span class="number">0</span>)&#123;<span class="comment">//若只够画一列，仍需偏移</span></div><div class="line">              maxX=maxX+entityXOffset;</div><div class="line">          &#125;<span class="keyword">else</span>&#123;<span class="comment">//否则记录上一个实体最后一个字段的X</span></div><div class="line">              maxX = model.fieldNodes[model.tableNodes[i].data.id][model.fieldNodes[model.tableNodes[i].data.id].length<span class="number">-1</span>].position.x+entityXOffset;<span class="comment">//偏移量200</span></div><div class="line">          &#125;</div><div class="line">          <span class="keyword">if</span>(cols&gt;fieldCol)&#123;<span class="comment">//实体切换到下一行</span></div><div class="line">              fieldXOffset = <span class="number">0</span>;</div><div class="line">              maxX = <span class="number">0</span>;</div><div class="line">              maxY=fieldYOffset*fieldRow*(++outLoopNum)+<span class="number">120</span>*outLoopNum;</div><div class="line">              cols = <span class="number">0</span>;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> &#123; <span class="attr">nodes</span>: nodesER, <span class="attr">edges</span>: _.createEdgesData(model)&#125;;</div><div class="line">      &#125;,</div><div class="line">      paintCytoER : <span class="function"><span class="keyword">function</span>(<span class="params">datas</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> cy = cytoscape(&#123;</div><div class="line">          container: <span class="built_in">document</span>.getElementById(<span class="string">'cy'</span>),</div><div class="line">          minZoom : <span class="number">0.5</span>,</div><div class="line">          maxZoom : <span class="number">1.5</span>,</div><div class="line">          userZoomingEnabled: <span class="literal">true</span>,</div><div class="line">          userPanningEnabled:<span class="literal">true</span>,</div><div class="line">          wheelSensitivity : <span class="number">0.1</span>,</div><div class="line">          style: cytoscape.stylesheet()</div><div class="line">            .selector(<span class="string">'node'</span>)</div><div class="line">              .css(&#123;</div><div class="line">                <span class="string">'shape'</span>: <span class="string">'roundrectangle'</span>,</div><div class="line">                <span class="string">'content'</span>: <span class="string">'data(name)'</span>,</div><div class="line">                <span class="string">'text-valign'</span>: <span class="string">'center'</span>,</div><div class="line">                <span class="string">'color'</span>: <span class="string">'white'</span>,</div><div class="line">                <span class="string">'text-outline-width'</span>: <span class="number">3</span>,</div><div class="line">                <span class="string">'text-outline-color'</span>: <span class="string">'#888'</span>,</div><div class="line">                <span class="string">'font-size'</span> : <span class="string">'8px'</span>,</div><div class="line">                <span class="string">'width'</span>: <span class="number">100</span>,</div><div class="line">                <span class="string">'height'</span>: <span class="number">30</span>,</div><div class="line">                <span class="string">'background-color'</span>: <span class="string">'#93CDDD'</span>,</div><div class="line">                <span class="string">'text-outline-color'</span>: <span class="string">'#93CDDD'</span>,</div><div class="line">              &#125;)</div><div class="line">            .selector(<span class="string">'.fieldRelation'</span>)<span class="comment">//关系线</span></div><div class="line">              .css(&#123;</div><div class="line">                  <span class="string">'content'</span>: <span class="string">'data(name)'</span>,</div><div class="line">                  <span class="string">'width'</span>: <span class="number">1</span>,</div><div class="line">                  <span class="string">"color"</span> : <span class="string">"#FFFF00"</span>,</div><div class="line">                  <span class="string">'font-family'</span>: <span class="string">"Microsoft YaHei"</span>,</div><div class="line">                  <span class="string">'font-size'</span> : <span class="string">'10px'</span>,</div><div class="line">                  <span class="string">'line-color'</span>: <span class="string">'red'</span>,</div><div class="line">                  <span class="string">'target-arrow-color'</span>: <span class="string">'red'</span>,</div><div class="line">                  <span class="string">'source-arrow-color'</span>: <span class="string">'red'</span>,</div><div class="line">                  <span class="string">'curve-style'</span> : <span class="string">'bezier'</span>,<span class="comment">//路线</span></div><div class="line">                  <span class="string">'line-style'</span> : <span class="string">'dashed'</span>,<span class="comment">//线的样式</span></div><div class="line">                  <span class="string">'target-arrow-shape'</span>: <span class="string">'triangle-backcurve'</span>,</div><div class="line">                  <span class="string">'target-arrow-fill'</span> : <span class="string">'filled'</span>,</div><div class="line">                  <span class="string">'text-background-opacity'</span> : <span class="number">0</span>,</div><div class="line">              &#125;)</div><div class="line">            .selector(<span class="string">'$node &gt; node'</span>)<span class="comment">//小节点外面的框</span></div><div class="line">              .css(&#123;</div><div class="line">                <span class="string">'shape'</span>: <span class="string">'roundrectangle'</span>,</div><div class="line">                <span class="string">'text-valign'</span>: <span class="string">'top'</span>,</div><div class="line">                <span class="comment">// 'height': 'auto',</span></div><div class="line">                <span class="comment">// 'width': 'auto',</span></div><div class="line">                <span class="string">'background-color'</span>: <span class="string">'#ccc'</span>,</div><div class="line">                <span class="string">'background-opacity'</span>: <span class="number">0.333</span>,</div><div class="line">                <span class="string">'color'</span>: <span class="string">'#888'</span>,</div><div class="line">                <span class="string">'text-outline-width'</span>:<span class="number">0</span>,</div><div class="line">                <span class="string">'font-size'</span>: <span class="number">15</span></div><div class="line">              &#125;)</div><div class="line">            .selector(<span class="string">':selected'</span>)<span class="comment">//选中</span></div><div class="line">              .css(&#123;</div><div class="line">                <span class="string">'background-color'</span>: <span class="string">'#00BFFF'</span>,</div><div class="line">                <span class="string">'line-color'</span>: <span class="string">'#00BFFF'</span>,</div><div class="line">                <span class="string">'target-arrow-color'</span>: <span class="string">'#00BFFF'</span>,</div><div class="line">                <span class="string">'source-arrow-color'</span>: <span class="string">'#00BFFF'</span>,</div><div class="line">                <span class="string">'text-outline-color'</span>: <span class="string">'#00BFFF'</span></div><div class="line">              &#125;)</div><div class="line">            .selector(<span class="string">'#main'</span>)</div><div class="line">              .css(&#123;</div><div class="line">                <span class="string">'background-opacity'</span>: <span class="number">0</span>,</div><div class="line">                <span class="string">'border-width'</span>: <span class="number">1</span>,</div><div class="line">                <span class="string">'border-color'</span>: <span class="string">'#aaa'</span>,</div><div class="line">                <span class="string">'border-opacity'</span>: <span class="number">0.5</span>,</div><div class="line">                <span class="string">'font-size'</span>: <span class="number">30</span>,</div><div class="line">                <span class="string">'padding-top'</span>: <span class="number">40</span>,</div><div class="line">                <span class="string">'padding-left'</span>: <span class="number">40</span>,</div><div class="line">                <span class="string">'padding-bottom'</span>: <span class="number">40</span>,</div><div class="line">                <span class="string">'padding-right'</span>: <span class="number">40</span>,</div><div class="line">              &#125;),</div><div class="line">          elements: &#123;</div><div class="line">            nodes: datas.nodes,</div><div class="line">            edges: []</div><div class="line">          &#125;,</div><div class="line">          layout: &#123;</div><div class="line">            name: <span class="string">'preset'</span></div><div class="line">          &#125;</div><div class="line">        &#125;).off(<span class="string">'click'</span>).on(<span class="string">'click'</span>,<span class="string">'.cyField'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="comment">//左键展开</span></div><div class="line">                <span class="comment">//关闭存在的关系  目前只有表0的字段0有关系</span></div><div class="line">                <span class="keyword">if</span>(e.target.id()==<span class="string">'t0-f0'</span>)&#123;</div><div class="line">                  cy.remove(<span class="string">'.fieldRelation'</span>);</div><div class="line">                  cy.add(datas.edges);</div><div class="line">                &#125;</div><div class="line">                </div><div class="line">            &#125;).off(<span class="string">'cxttap'</span>).on(<span class="string">'cxttap'</span>,<span class="string">'node'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="comment">//右键关闭</span></div><div class="line">                <span class="keyword">if</span>(e.target.id()==<span class="string">'t0-f0'</span>)&#123;</div><div class="line">                  cy.remove(<span class="string">'.fieldRelation'</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        <span class="keyword">return</span> cy;</div><div class="line">      &#125;</div><div class="line">    &#125;;</div><div class="line">  &#125;();</div><div class="line">  _.paintCytoER(</div><div class="line">    _.figureNodesPosition(</div><div class="line">      _.createNodesData(tableNum),fRow,fCol</div><div class="line">    )</div><div class="line">  );</div><div class="line">&#125;)(<span class="number">10</span>,<span class="number">10</span>,<span class="number">8</span>);<span class="comment">//表数，每个实体的字段行数，每行的字段列数</span></div></pre></td></tr></table></figure></p><h1 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h1><p>提供两种压缩包下载：</p><p>tar.gz下载：<a href="/download/cytoscapeER.tar.gz">cytoscapeER.tar.gz</a></p><p>zip下载：<a href="/download/cytoscapeER.zip">cytoscapeER.zip</a></p><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><img src="/img/er/er1.png" alt="ER图"><br><img src="/img/er/er2.png" alt="ER图"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cytoscape.js是一个很好的实现关系图的js组件。最近用的比较多，这里记录下如何用CytoscapeJS实现类ER图。&lt;/p&gt;
&lt;p&gt;这是官方文档： &lt;a href=&quot;http://js.cytoscape.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cytoscape.js&lt;/a&gt;   &lt;/p&gt;
&lt;p&gt;这是GitHub地址：&lt;a href=&quot;https://github.com/cytoscape/cytoscape.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub-Cytoscape.js&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://JohnneyAnn.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="记录" scheme="http://JohnneyAnn.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="Javascript" scheme="http://JohnneyAnn.github.io/tags/Javascript/"/>
    
      <category term="Cytoscape" scheme="http://JohnneyAnn.github.io/tags/Cytoscape/"/>
    
  </entry>
  
  <entry>
    <title>镇江游记</title>
    <link href="http://JohnneyAnn.github.io/2017/10/16/%E9%95%87%E6%B1%9F%E6%B8%B8%E8%AE%B0/"/>
    <id>http://JohnneyAnn.github.io/2017/10/16/镇江游记/</id>
    <published>2017-10-16T13:33:35.391Z</published>
    <updated>2017-10-16T13:33:35.387Z</updated>
    
    <content type="html"><![CDATA[<p>脱更了。说说十一假期的事。回了家。去了镇江。<br><a id="more"></a></p><p></p><p>需要回家。</p><p></p><p></p><p>原定于10月1号下午做大巴回家，想着30号晚上去和好友玩一下，也是因为一票难求。计划有变，被朋友抛弃，他提前回了家，留我一人凌乱。回去，买不到票，不回去，要一个人等到明天。在公司拿着外网机抢票，需要排队，余票不足，我还抱有一丝侥幸，试试顺风车吧，一直没有人接单，公司也呆不下去，于是干脆回到住的地方等。当东西收拾好的时候，拿起手机打开12306，觉得何其幸运，不知哪位仁兄改变了行程，让我购买到一张，仅此一张。虽然时间比较赶，还是要试试，叫了滴滴，飞奔出去，出门车刚到，行云流水，爽！当然是赶到了，想着自己如此幸运，看到南站很多人在买彩票，可不能浪费了这幸运，买了两张刮刮乐，嗯，一张没中，定是运气已被耗尽，自己却浑然不知。</p><p></p><p></p><p>工作了，一年没有几个这样的长假，可是出去的好时机啊，现在的书大多是对自由的向往，可能深受其影响，也趋之若鹜。无奈家中琐事繁多，家人需要陪伴，自由以后再说吧。妈妈、亲姐、表姐、堂妹回来了，父亲工作忙没回的来，甚是遗憾，还缺一些人没有回来，好像也没多少了。到了五号大家都走了，我也跟着一起，先去了合肥与好友一聚，第二天赶回了南京。还有两天时间，自然不能浪费，走走吧，选的镇江，想着有古街、金山、北固亭，应该还不错，果然，不失所望。</p><p></p><p></p><p>南京到镇江动车只有20分钟的车程。订了一个青年旅社（小山楼，安利一下），旅社位于西津渡里面，这是一大特色，古街里的旅馆自然也是很有味道的。西津渡依山临江，在蒜山，因此三国时被叫做”蒜山渡“，不去还以为山上全是大蒜呢。后来到宋代以后才被叫西津渡，现在已经很难看出来它之前是作为渡口存在了，江水可是从脚下流过的，江岸北移，如今西津渡距长江江岸已有300多米远，虽说还有些遗址被人们用玻璃封存在地下，但相信我，如果上面没有牌子跟你说这是渡口遗址，你定是不知道的。但西津渡古街确实是镇江文物古迹保存最多，最集中，最完好的地区，街的尽头是镇江博物馆，也可以去一去，有很多精美的艺术品。白天在古街中，算是跟着人流瞎撞，毕竟也不熟悉，想着都看一遍。这里倒是有两个有趣的事，也总结了一些经验，不能盲目的跟着人流，因为他们去的下一个景点可能是厕所，到了景区，景区地图是一定要看的，你肯定想不到，我走了两条不同的上山路，到的同一个地方时双腿抖动的频率。</p><p></p><p></p><p>下午四点，去旅馆办理入住，是六人间（其实，晚上只有两个人在），休息了一时，去了金山，毕竟有着水漫金山的古典，在网上买了票准备进景区。热心的保安，提醒我：现在还进去啊，我说：对啊，他笑了：那你得半个小时之内赶出来。不可不可，金山那么大，首先我得保证我绕一圈还能绕出来，其次我得对得起已不是学生买的全价的票。退票，回西津渡。很快夜色降临，古街上灯火通明，街上的人也陆陆续续减少，有离开的，有跑到屋子里找食的。我误打误撞走进了一家店，找点吃的就行，吃完已到7点。晚上的古街跟白天的太不一样了，宁静，空气清新，我继续走着，舍不得离开，这感觉太好了。没忍住，拿起了手机拍起了沧桑的脸，这里就不放出来了，可能还是得去学点PS。好在，旅馆在古街里，累了可以歇歇脚。走进旅馆，桌子前围了5个人，旁边还有一个（后来知道是个韩国的小哥），可能和我一样暂时还不好意思加入他们，我做在一旁的椅子上，听他们谈话，手不听使唤的撸起了旁边的小猫（两只小猫，一只叫八一，一只叫建军，是那天出生的）。其中一人（后来得知，是情侣的前台，在为自己要营业的情侣做些准备）拿着她的“秘籍”，讲述青旅的稳赚钱论，我听的津津有味，差不多摸清了底细，加入了他们。前台，来当义工的学生，来找义工玩顺便游玩的学生（后来是我室友），还有两个妹子，还有那个韩国小哥。吃着东西，聊着天，那我觉得这个青旅还满有意思，也是我想要的样子。后来很多人都去洗漱了，虽和韩国那小哥沟通有点困难，还是聊了下去，也蛮有意思。后来快11点，我又出去了一趟，那会人更少。</p><p></p><p></p><p>听说床铺都被预定了，也不知为何后来我们的房间只有两人入住，次日，我们两人就算凑了对一起去了金山，北固亭。想着自己得去买全价的票，倒是挺怀恋几个月前还是学生身份的自己，好像很多事都被优待，一毕业就把累积的灾难都砸你身上。现在可能不再累积了，有灾难直接丢你脸上，解决了，再给你一个，不会让你闲着。</p><p></p><p></p><p>去镇江不去金山是个很不合常理的事，你得去看看白娘子吧，不懂爱的法海肯定也不能落下（你去了别这么说，法海是很受金山寺尊重的，不可妄语）。没去金山之前看了网上一个段子，一网友到了金山，欲救白娘子，后因人太多放弃。可能此时已假期末，有人但并不太多，也到了最顶端看了看风景。同行的伙伴告诉我绕塔要顺时针绕，回来我特地查了查确有此事，绕塔需右绕，低头收摄眼根，消除杂念，忏悔，祈求。好在他跟我说了，不然岂不丢失了虔诚，善哉善哉。</p><p></p><blockquote><p>千古江山，英雄无觅孙仲谋处。舞榭歌台，风流总被雨打风吹去。斜阳草树，寻常巷陌，人道寄奴曾住。想当年，金戈铁马，气吞万里如虎。<br>元嘉草草，封狼居胥，赢得仓皇北顾。四十三年，望中犹记，烽火扬州路。可堪回首，佛狸祠下，一片神鸦社鼓。凭谁问：廉颇老矣，尚能饭否？</p></blockquote><p></p><p>很熟悉，辛弃疾的京口北固亭怀古，镇江以前叫京口。进去就知道，还有很多诗词是描绘北固亭的，自己其实并不太清楚，不多赘述，免得有打肿脸充胖子的嫌疑。这个词也是有通行伙伴的提醒才记起，逛北固亭之余还给我普及了下历史知识。登上北固亭，正面是山顶俯瞰的视角，背面是江（景色太美）。爬了很久的山，到此得到清风，算是给予我们的奖励，我们在上面待的时间很长，确实不愿意走，如果有张床就更好了。拍了很多照片，不情愿的下了山。江对岸听说是金山，可惜此次匆忙，去不了，仍旧是有机会的。</p><p></p><p></p><p>本来是想写的详细点的，写着写着发现有意思的事太多，时间有限，后面就草草了事，也算是记了个大概，之后看起这篇博客，想着依旧能够记起在镇江着两天发生的事，差不多也就够了。</p><p></p><p><hr></p><p></p><p>记于 2017.10.16 21.22（完）</p><p></p><p></p><p>放几张在北固亭的照片，不会拍照将就着看吧</p><br><img src="/img/zhenjiang/1.jpg" alt="1"><br><img src="/img/zhenjiang/2.jpg" alt="2"><br><img src="/img/zhenjiang/3.jpg" alt="3"><br><img src="/img/zhenjiang/4.jpg" alt="4"><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;脱更了。说说十一假期的事。回了家。去了镇江。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="游记" scheme="http://JohnneyAnn.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>罗马帝国衰亡史（3）</title>
    <link href="http://JohnneyAnn.github.io/2017/10/11/%E7%BD%97%E9%A9%AC%E5%B8%9D%E5%9B%BD%E8%A1%B0%E4%BA%A1%E5%8F%B2%EF%BC%883%EF%BC%89/"/>
    <id>http://JohnneyAnn.github.io/2017/10/11/罗马帝国衰亡史（3）/</id>
    <published>2017-10-10T16:04:37.756Z</published>
    <updated>2017-10-10T16:04:37.756Z</updated>
    
    <content type="html"><![CDATA[<p>从体制，信仰，战略三个方面，简述西罗马帝国最终灭亡的原因和过程。<br><a id="more"></a></p><h1>四帝共治</h1><p>罗马起源于分散的部落城邦，早起大家各自为政，出于大规模的生产和共同防卫的需要，国家诞生。但虽是统一的共同体，但成员始终保持警惕。因此早期的重要职位都是有两个以上的人来担任，防止出现独裁。后拉，戴克里先40岁成为皇帝，并且是由地方军用户的，他完整的见证了混乱的全过程，所以一上台就要改革，主要的一点是将罗马帝国划分成四个大的管理区，交给包括自己在内的四个人去统治。</p><br><p>由于之前500年的共和国历史，罗马的皇帝并不像中国古代的天子一样，所以戴克里先直接把自己设定成最高君主，让人们管自己叫“主和神”，实现权力的合法性。人见他得趴在地上亲吻他的长袍。戴克里先讲版图划分为东西两部分后，他和一位朋友担任这两部份的主皇帝，再讲东西两部分细分选出两个副皇帝，这就是“四帝共治”。</p><br><p>按照戴克里先的想法，东西部皇帝都是有任期的，任期结束，主皇帝退位，副皇帝继位，然后再选新的副皇帝。理想是好的，但执行这些制度的还是人，人的欲望是无限的。他退位第二年内战又开始了。君士坦丁获得了胜利杀死了其他三个皇帝，将整个帝国再次统一，但四帝共治留下的分裂似乎难以愈合，几十年后，君士坦丁的继任者再次把皇位传给两个儿子，分别掌管东西两部，罗马帝国正式分裂成为西罗马帝国和东罗马帝国。</p><br><h1>信仰危机</h1><br><br><p>这节是基督教对于罗马帝国的影响。在基督教兴起之前，整个罗马帝国是信奉多神的，每个殖民地供奉的神都是不一样的，比如丰收神…，所以罗马帝国的神话系统特别庞大，罗马政府对宗教是宽容的，但是以政治忠诚为前提的。基督徒的越来越多，让罗马感受不到忠诚。基督教徒认为只有一个神，平等观念也导致皇帝与普通民众一样。盛世时代对现世生活的享乐，变成了对乱世下对来世的向往，越来越多的罗马公民在乱世中向往死后升入天堂，不愿意参军，财富没有回流进社会，大多用于祭拜活动，严重影响了社会经济体系的发展。</p><br><p>尽管和原有信仰产生很大冲突，但随着越来越多的人加入，帝国最终还是迫于压力拖鞋。公元313年，君士坦丁颁布《米兰敕令》，宣布基督教合法化。但后来基督教又出现了内部理论分歧，尽管皇帝都出来调停，但其内部派别纷争还是带来了社会动荡，国家很多精力都被消耗在解决这些争议上。</p><br><h1>西罗马帝国的灭亡</h1><br><br><p>公元330年，君士坦丁在帝国东部建立了整个罗马帝国的新首都，取名叫做“新罗马”。之所以迁都，是出于对当时处在危亡中整个罗马帝国形势的考量：外部，罗马帝国正遭受着北方蛮族的大举入侵，无论在规模还是势头上都非常强大；内部，则是为了从源头上解决政权的合法性问题。</p><br><p>戴克里先把自己封为最高君主，把权力神化，让权力的源头直接指向神，他之后的继任者包括君士坦丁也是这么做的，但罗马有太长的共和传统，是绝对君主专制的牵绊。比如，元老院曾经是罗马共和国时代的权力机构，形式上，皇帝想要做任何重大决定还是要和元老院商量的。如果想要摆脱这种传统的束缚，唯一的办法只有换一个地方，重新建一套班子，所以君士坦丁决定迁都。</p><br><p>迁都的目标，就选在希腊地区的一个小海港——拜占庭。这里既远离了蛮族进攻的主要风口，又远离了元老院的视线，更远离了罗马城几百年沿袭下来的军事官僚喋喋不休的争吵。手握大权、专横跋扈的近卫军被取消，元老院也完全变成了一个单纯的咨询机构，没有了实权，君士坦丁发布命令、管理国家的自由度大大提高。他引入了当时东方波斯帝国的很多君主专制礼仪，这时候罗马帝国的皇帝才真正称得上有绝对权力的皇帝。</p><br><p>随着君士坦丁向东迁都，整个罗马帝国的战略重心自然就发生了转移。在这种转移之下，东、西部的差异越来越大：君士坦丁堡的发展越来越快，而之前的罗马城却越来越衰落。一方面是由于整个罗马帝国的首都切换到了东部，所有资源都向东倾斜；另一方面，君士坦丁堡所处的位置本来就是一个天然的交通枢纽，它扼守着黑海和地中海的咽喉要道，又控制着丝绸之路东西方的商道，不仅易守难攻，并且贸易发达，所以之前在西部的大量贵族和精英阶层都开始向东移民，罗马城成了毫无发展希望的废城，最终西罗马帝国灭亡。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从体制，信仰，战略三个方面，简述西罗马帝国最终灭亡的原因和过程。&lt;br&gt;
    
    </summary>
    
      <category term="书籍分享" scheme="http://JohnneyAnn.github.io/categories/%E4%B9%A6%E7%B1%8D%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="读书笔记" scheme="http://JohnneyAnn.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="罗马帝国衰亡史" scheme="http://JohnneyAnn.github.io/tags/%E7%BD%97%E9%A9%AC%E5%B8%9D%E5%9B%BD%E8%A1%B0%E4%BA%A1%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>罗马帝国衰亡史（2）</title>
    <link href="http://JohnneyAnn.github.io/2017/09/26/%E7%BD%97%E9%A9%AC%E5%B8%9D%E5%9B%BD%E8%A1%B0%E4%BA%A1%E5%8F%B2%EF%BC%882%EF%BC%89/"/>
    <id>http://JohnneyAnn.github.io/2017/09/26/罗马帝国衰亡史（2）/</id>
    <published>2017-09-26T12:15:38.412Z</published>
    <updated>2017-09-26T12:15:38.412Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博客主要对“三世纪危机”的过程和原因做一个读书笔记，从政治、经济、蛮族政策三个方面进行分析，《罗马帝国衰亡史》中这一卷完整描述了罗马帝国全面衰落的状况。<br><a id="more"></a></p><h1 id="无政府状态"><a href="#无政府状态" class="headerlink" title="无政府状态"></a>无政府状态</h1><p></p><p>这是三世纪危机最典型的一个特征，不断有人从地方起兵杀进罗马城，49年中，一共换了26位皇帝，大多是被地方夺权者所杀。这其中的原因由于随着罗马共和国向帝国转变，元首相对于元老院的力量对比大大上身，大家都想做元首，慢慢的元老院行省都变味元首行省，因为元首行省可以有军团，也就是有兵权。但罗马的制度并不能保证每任皇帝都是强势的人，中央对地方的控制力越来越低,最后造成地方的军事割据。再加上塞维鲁王朝实现的政策，使得军队失去了忠诚这个信仰，全是靠收买的。罗马城变成了野心家谋取私利的战场，帝国枕骨陷入混乱。</p><p></p><h1 id="货币贬值政策"><a href="#货币贬值政策" class="headerlink" title="货币贬值政策"></a>货币贬值政策</h1><p></p><p>之前说到，塞维鲁再改革期间，为了收买和讨好士兵，把军饷提高到之前的6-8倍。钱当然是从国库里抽，从各个行省搜刮，但问题是行省每年上缴的税收是维持在一个水平的，怎么能像军饷一样突然暴增？因此，只能靠不断挑起对外战争，用战利品充当军饷，但打仗还是需要钱，这就进入了死循环。卡拉卡拉普发公民权也导致了税收的降低，因为罗马人是不需要缴税的。三世纪危机期间，各个行省考武力夺权的皇帝仅仅是把皇位当作提款机，需要钱就把货币再次贬值，只做表面的数字游戏。武装夺权的过程本身又进一步扩充了军备，增加所在地区士兵的同时也减少了实际生产的人。在产出没有增加的情况下，提高货币的面额，让通货膨胀进一步恶化。很多地方也恢复到实物换实物的原始状态，整个罗马帝国陷入了全面的金融危机。</p><p></p><h1 id="蛮族政策"><a href="#蛮族政策" class="headerlink" title="蛮族政策"></a>蛮族政策</h1><p></p><p>罗马帝国最终被蛮族毁灭只是表面现象，根本原因在于长期的蛮族政策。是罗马人自己敞开了让蛮族涌入的大门。正如之前所说的，五贤帝时代是不允许蛮族进入罗马的，到末期一些蛮族也只被允许在帝国边境外定居，但不能入境。但是，罗马实行军事改革以后，为了扩大兵源，允许大量蛮族以雇佣兵的身份加入部队。这些人加入军队只是为了钱，无忠诚可言，也与罗马人的文化不同。但既然成为了罗马人，自然产生了政治诉求，也调起了反叛的大旗。</p><p></p><p><hr><br>整理于2017.9.26 20:12 南京回合肥的高铁上 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客主要对“三世纪危机”的过程和原因做一个读书笔记，从政治、经济、蛮族政策三个方面进行分析，《罗马帝国衰亡史》中这一卷完整描述了罗马帝国全面衰落的状况。&lt;br&gt;
    
    </summary>
    
      <category term="书籍分享" scheme="http://JohnneyAnn.github.io/categories/%E4%B9%A6%E7%B1%8D%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="读书笔记" scheme="http://JohnneyAnn.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="罗马帝国衰亡史" scheme="http://JohnneyAnn.github.io/tags/%E7%BD%97%E9%A9%AC%E5%B8%9D%E5%9B%BD%E8%A1%B0%E4%BA%A1%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>胡子</title>
    <link href="http://JohnneyAnn.github.io/2017/09/25/%E8%83%A1%E5%AD%90/"/>
    <id>http://JohnneyAnn.github.io/2017/09/25/胡子/</id>
    <published>2017-09-25T15:18:06.387Z</published>
    <updated>2017-09-25T15:18:06.387Z</updated>
    
    <content type="html"><![CDATA[<p>胡子是男性的第二特征，这倒也证明我确实是个男人。我还发现有些女生也会长胡子，不过她们都说是那是汗毛，比较重而已。我这么说可能会被打死。<br><a id="more"></a></p><p>俗话说，嘴上无毛，办事不牢。回头想了下，应该是高中就感觉到了有胡子，这么说来我靠谱的比较早。那会的胡子是软的，特别是下巴那片，毛绒绒的，很是奇怪。奇怪归奇怪，但整个高中生涯是没有动嘴边一根汗毛的，这可能跟我妈的教导有关。</p><br><p>可能是电视上看男人刮胡子的样子有些帅，难免有模仿的冲动。当我每次有这个冲动的时候，我妈都会告诉我：“胡子越刮越长，越刮越多，越刮长的越快，你看看那谁谁刮胡子脸上都长胡子了”。她觉得腮胡是刮出来的，我虽不认同但也放下了手中的刀。</p><br><p>并不是所有人都跟我一样能够抑制住这样的冲动，但他们也确信我妈说的那些道理，把注意力放在了“刮”这个字上。对，不刮就行。有人采取了拔，将胡子连根拔起，从根源扼制住；有人采用了剪，用剪刀的，用指甲钳的。但有一个共同点，你时常听到他们的惨叫，颇为悲惨，我忍住不笑并任由胡子漫长。</p><br><p>高考结束，我买了个剃须刀。确实看一些明星留着胡子颇显男子气概，但我还是能够认清自己。这是个看颜值的时代，不，一直以来都是，长的帅的留起胡子就man，长的丑的只能叫邋遢。之前还遇到一件事，我去我经常去的理发店剪头发，我认为理发师技术很不错，不然也不会定点。后来来了个小伙子，大约比我小个两三岁，他拿着他的手机，大概是跟理发师看个明星，就要剪这样的。我看着理发师很认真的给他剪，由于之前在理发店给朋友帮过忙，大概也知道他想要的是什么样的，也确信理发师尽了力。理发完成后，小伙子表现的极其不爽，认为剪的跟照片不一样。我内心是想笑的，但还是没有去拆穿他，理发师也没有。我仍然觉得本来的他会更好点。跑题了，说说刮完胡子的变化。</p><br><p>拿起了人生的第一个剃须刀，小心翼翼地用点触法消灭我的胡子，确认清除完毕照了下镜子。哇，这是个什么玩意！以为能年轻20岁，实则发现只是嘴上少了两条黑线。好在，学着明星帅气的摸着下巴，也能感受到一丝光滑。</p><br><p>这个剃须刀我一直用到现在，它倒是依然坚挺着。不过，从过去到现在，我临幸它的次数越来越频繁，一周一次，三天一次，两天一次，如今每天都离不开它，早上起来要是发现它不在，心中也倍感失落。或许它也在开心，毕竟我每天都要临幸它，也不知道它年纪大了，还经不经得起我的蹂躏，更不知道它还能支撑多久。</p><br><p>绒毛变成胡茬，我也是个20好几的人。每次别人问到年龄我都会告诉别人是95年的而不是直接说23。年龄这个东西有实虚一说，按照我家那边我应该是23了，有些地方是是按照实岁的，那样就能小一岁，还能多出来一年时间，我抱着这样的侥幸。</p><br><p>我看着胡子在生长，一天又一天，长出来就要被收割，至少在当天是一点不剩的。也好似现在的我们，每天都在重复，工作也好，生活也好。这样看来好像都没有任何意义，但我还是想说是有一点不同的，我们并不知道昨天的胡子长了多少，抑或是带着怎样的情感的长了出来，但我们是能够记住我们所重复的，我们所经历的情绪、事物或人，这就是意义。</p><br><p>2017.9.25 23:17</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;胡子是男性的第二特征，这倒也证明我确实是个男人。我还发现有些女生也会长胡子，不过她们都说是那是汗毛，比较重而已。我这么说可能会被打死。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://JohnneyAnn.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>罗马帝国衰亡史（1）</title>
    <link href="http://JohnneyAnn.github.io/2017/09/24/%E7%BD%97%E9%A9%AC%E5%B8%9D%E5%9B%BD%E8%A1%B0%E4%BA%A1%E5%8F%B2%EF%BC%881%EF%BC%89/"/>
    <id>http://JohnneyAnn.github.io/2017/09/24/罗马帝国衰亡史（1）/</id>
    <published>2017-09-24T13:27:04.078Z</published>
    <updated>2017-09-24T13:27:04.066Z</updated>
    
    <content type="html"><![CDATA[<p>本书是作者爱德华·吉本毕生智慧和研究成果的结晶。完整叙述了从罗马帝国“五贤帝时代”起至1453年君士坦丁堡沦陷的1300多年的历史，其中涉及到了政治、经济、军事、宗教、文化、和社会的方方面面。这一节说下五贤帝时代的产生与终结以及把罗马帝国引向深渊的赛维鲁王朝。<br><a id="more"></a></p><h1 id="罗马共和国到罗马帝国"><a href="#罗马共和国到罗马帝国" class="headerlink" title="罗马共和国到罗马帝国"></a>罗马共和国到罗马帝国</h1><p>早期，凯撒与屋大维处在罗马共和国向罗马帝国转变的过度时期，此时共和思想依然非常深厚。按照罗马共和国的传统，罗马的权利架构有公民大会（平民）、元老院（贵族）和执政官（干活的）相互制约，是一种平民政治、贵族政治和君主制的混合体。直到凯撒掌权，把自己任命为终身独裁官，共和制也走向解体。屋大维平定内乱，改组政府/建立了集军事、经济、宗教大权为一身的独裁政体“元首制”，他也被认为是罗马帝国第一任皇帝，被授予“奥古斯都”的称号。</p><h1 id="五贤帝时代起源与终结"><a href="#五贤帝时代起源与终结" class="headerlink" title="五贤帝时代起源与终结"></a>五贤帝时代起源与终结</h1><p>从公元96年到180年，相继有五位贤明的君主担任罗马帝国的皇帝，这些年间罗马在国力和民生上都取得了空前的发展。这得益于此时的皇位继承制度是任人唯贤德制度，即上一个皇帝生前就开始寻找、挖掘帝国内部有才干的人，收为养子后来继承王位。第一位皇帝为涅尔瓦，找到了当时有很高声望的图拉真，将其收为养子。这种制度保证了政权的平稳交接，也保证了下一任的皇帝才干得一施展，因此再接下来的80多年，密集出现了高水平的皇帝，迎来了五贤帝时代。</p><br><p>可是，最后一位皇帝马克·奥略流并没有坚持前四位皇帝的养子继承制，而是将皇位继承给了自己的亲儿子康茂德。康茂德从一开始就被内定为皇帝，但缺乏政治经验，再加上年少成名，遭到了家族中其他人的嫉妒。在一次刺杀风波后，康茂德对治理国家彻底失去了信心和兴趣，取而代之的是多疑与缺乏安全感，就觉得随时处在了危险之中。他开始任用近卫军，对不了解的将领滥杀无辜，敌视元老院，看你不爽就就杀你，整个帝国乌烟瘴气。把国事都交给近卫军长官去处理，出了事也让近卫军长官背锅。那近卫军当然不乐意啊，后来被近卫军合谋杀死。康茂德死后罗马帝国又开始陷入无休止的内乱，并且再也没有恢复过来，曾经的黄金时代终结。</p><h1 id="赛维鲁的军事改革"><a href="#赛维鲁的军事改革" class="headerlink" title="赛维鲁的军事改革"></a>赛维鲁的军事改革</h1><p>赛维鲁王朝的名字来源于王朝的创建者。由于赛维鲁腥风血雨的登位过程，这个王朝极其依赖于军事力量。康茂德被杀后，仅一年间，相继出现了五个人争夺皇位，史称“五帝之年”。赛维鲁首先结束了“五帝之年”，又花了两年把其他的争权者一个个击败，自己当了皇帝。正式由于皇位争夺的太过惨烈，让其深知军队的力量，加上他自己都怀疑政权的合法性，所以上来就开始军事改革。首先整改近卫军，毕竟康茂德就是被近卫军杀的，怕啊！还将夜间巡查队从之前的几百人增加到了7000人。其次，是从地方行省军团里抽取强悍的士兵，这也是很前所未有的。行省是在罗马的不断扩张中建立的一种行政单位，早期对于行省的管理是处于税收方面的考虑，并且这些地方都是靠武力拿下的。所以，罗马人从骨子里就有着优越感，虽然你行省是我罗马的，但你们可不是罗马人，行省人士不允许加入罗马军团的，更不能参加近卫军。赛维鲁这个举措与传统不符，更可怕的是招的人很多都是来自北方蛮族。</p><br><p>为了维护士兵的忠诚度，赛维鲁几乎动用了整个罗马帝国的国库给士兵发饷，和凯撒、屋大维时代相比几乎翻了6-8倍！钱从哪来？劫掠平民、搜刮百姓。士兵犯点小错也不处罚，因此也丢了整个军队纪律。在赛维鲁看来，军队是他统治的根基。还有一句他著名的话：塞满士兵的腰包，不要管其他人。这些改革的同时，近卫军长官的权势和地位提高到了一个空前的高度，还给予他们司法权、行政权，有的长官甚至有了自己的小法庭，简直可怕。以至于赛维鲁王朝结束后，军人阶层势力一步步扩大，大到可以废立皇帝！</p><h1 id="卡拉卡拉普发公民权"><a href="#卡拉卡拉普发公民权" class="headerlink" title="卡拉卡拉普发公民权"></a>卡拉卡拉普发公民权</h1><p>卡拉卡拉是老赛维鲁的儿子，也就是赛维鲁王朝的第二任皇帝。赛维鲁死后第二年，他颁布法令：给予所有在罗马帝国境内出生的自由人以完整的罗马公民权。之前说到，不是所有人都可以是罗马人的，血统不纯正！卡拉卡拉这么做是有自己的考虑的，一方面是赛维鲁的军事改革，让行省的人参了军，这是不合惯例的，这是身份问题冲突，另一方面，是个人原因，这父子两自己就不是罗马人，所以早就想给自己改头换面了。但是，卡拉卡拉真的卡了，没有顾及到整个体系因素之间的关联，更严重的是，之前公民权的限制是罗马人才能当皇帝，而现在理论上任何行省的人都可以做皇帝。这让地方军事长官们开始蠢蠢欲动，没过多久第一批反叛者就开始夺权。</p><br><hr><br><p>码字辛苦，今天先到这，下次再分享- -。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本书是作者爱德华·吉本毕生智慧和研究成果的结晶。完整叙述了从罗马帝国“五贤帝时代”起至1453年君士坦丁堡沦陷的1300多年的历史，其中涉及到了政治、经济、军事、宗教、文化、和社会的方方面面。这一节说下五贤帝时代的产生与终结以及把罗马帝国引向深渊的赛维鲁王朝。&lt;br&gt;
    
    </summary>
    
      <category term="书籍分享" scheme="http://JohnneyAnn.github.io/categories/%E4%B9%A6%E7%B1%8D%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="读书笔记" scheme="http://JohnneyAnn.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="罗马帝国衰亡史" scheme="http://JohnneyAnn.github.io/tags/%E7%BD%97%E9%A9%AC%E5%B8%9D%E5%9B%BD%E8%A1%B0%E4%BA%A1%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>RHEL配置本地YUM源(使用镜像)</title>
    <link href="http://JohnneyAnn.github.io/2017/09/22/RHEL%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0YUM%E6%BA%90/"/>
    <id>http://JohnneyAnn.github.io/2017/09/22/RHEL配置本地YUM源/</id>
    <published>2017-09-21T16:26:40.108Z</published>
    <updated>2017-09-21T16:26:40.100Z</updated>
    
    <content type="html"><![CDATA[<p>RHEL6使用镜像文件配置本地yum源。</p><a id="more"></a><h1 id="挂载本地光盘到系统"><a href="#挂载本地光盘到系统" class="headerlink" title="挂载本地光盘到系统"></a>挂载本地光盘到系统</h1><p>这里使用的是虚拟机，点击右下角光盘图标，选择setting可选择需要挂在的镜像，在点击光盘的connecting即可挂载。</p><h1 id="配置本地YUM源"><a href="#配置本地YUM源" class="headerlink" title="配置本地YUM源"></a>配置本地YUM源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</div><div class="line">touch rhel-media.repo</div><div class="line">vim rhel-media.repo</div></pre></td></tr></table></figure><h2 id="填写以下内容"><a href="#填写以下内容" class="headerlink" title="填写以下内容"></a>填写以下内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[media]</div><div class="line">name=Red Hat Enterprise Linux 6.6                                </div><div class="line">baseurl=file:///media/RHEL...                                         </div><div class="line">enabled=1                                                         </div><div class="line">gpgcheck=1                                                        </div><div class="line">gpgkey=</div></pre></td></tr></table></figure><p>其中file://后面跟的是你的挂在位置，根据具体情况填入，一般在/media下的一个包，进入输入pwd把包路径获取下来，复制贴到这里。写完退出保存。</p><h2 id="清空原有缓存"><a href="#清空原有缓存" class="headerlink" title="清空原有缓存"></a>清空原有缓存</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum clean all</div></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Loaded plugins: product-id, security, subscription-manager</div><div class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</div><div class="line">Cleaning repos: media</div><div class="line">Cleaning up Everything</div></pre></td></tr></table></figure><h2 id="验证yum配置是否成功"><a href="#验证yum配置是否成功" class="headerlink" title="验证yum配置是否成功"></a>验证yum配置是否成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum makecache</div></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</div><div class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</div><div class="line">media                                                   | 4.1 kB     00:00 ... </div><div class="line">media/group_gz                                          | 211 kB     00:00 ... </div><div class="line">media/filelists_db                                      | 3.3 MB     00:00 ... </div><div class="line">media/primary_db                                        | 3.1 MB     00:00 ... </div><div class="line">media/other_db                                          | 1.4 MB     00:00 ... </div><div class="line">Metadata Cache Created</div></pre></td></tr></table></figure><p>P.S. file://后面的路径一定要对！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RHEL6使用镜像文件配置本地yum源。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://JohnneyAnn.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="http://JohnneyAnn.github.io/tags/linux/"/>
    
      <category term="yum" scheme="http://JohnneyAnn.github.io/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>转正风波</title>
    <link href="http://JohnneyAnn.github.io/2017/09/20/%E8%BD%AC%E6%AD%A3%E9%A3%8E%E6%B3%A2/"/>
    <id>http://JohnneyAnn.github.io/2017/09/20/转正风波/</id>
    <published>2017-09-20T15:10:36.452Z</published>
    <updated>2017-09-20T15:10:36.452Z</updated>
    
    <content type="html"><![CDATA[<p>2017.9.20 21:42</p><br><p>～～～～一波未平一波又起。这次转正可把我吓的不轻，倍感焦虑。</p><br><a id="more"></a><br><p>我们公司的转正是要走一定的流程的。首先，需要在网上申请转正考试，考试通过了才能进行答辩，答辩通过了才能转正。开始以为要到12月的，心里还是高兴的。</p><br><p>9月2号，我申请了转正考试。但由于阅卷人一直出差所以没有批。一直拖到了现在，导致在试题没有批完的情况下进行了答辩。答辩过程也是很恐怖，觉得表现的太差。当时转正考试是周六，一共只有三题，我做了很久，这里很感谢禹神的指点。尴尬的事情来了，答辩结束后，我的转正考试试题批完了，本来批完应该是要高兴的，但我高兴不起来，因为我有到题没过。巧妙的避开了出题人的意图，偷了一波懒。好了，考试都没过，答辩还有何用。</p><br><p>心中万匹恐龙乱撞，焦虑。准备二辨吧。</p><br><p>转机！在师傅的帮助下（具体帮助过程省略，总之难为师傅了- -），有了提交二次答案的机会，阅卷老师也很好，也给了我鼓励，联系了系统管理员让我通过。</p><br><p>现在就等着，答辩评审团批完就可以了。虽然有三位领导在出差无法批。。</p><br><p>没写太多东西，就是想记下来这件事，是真的感谢大家的帮助。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017.9.20 21:42&lt;/p&gt;&lt;br&gt;&lt;p&gt;～～～～一波未平一波又起。这次转正可把我吓的不轻，倍感焦虑。&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
      <category term="工作" scheme="http://JohnneyAnn.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="工作" scheme="http://JohnneyAnn.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>这次联谊</title>
    <link href="http://JohnneyAnn.github.io/2017/09/18/%E8%BF%99%E6%AC%A1%E8%81%94%E8%B0%8A/"/>
    <id>http://JohnneyAnn.github.io/2017/09/18/这次联谊/</id>
    <published>2017-09-18T14:45:59.494Z</published>
    <updated>2017-09-18T14:45:59.494Z</updated>
    
    <content type="html"><![CDATA[<p>2017.9.17 00:22起</p><br><p>之前的某一天，有人在mplus上发关于联谊的通知。考虑到周末的去处以及内心的好奇，我报了名。好在，这次的联谊还算有意思，或许应该多参与这些活动。</p><br><a id="more"></a><br><p>起初，并不知道是联谊相亲。报完名负责人询问关于身高、年龄、爱好等信息，我有点方，有考虑过临阵脱逃。程序员啊，想到我们这狭窄的圈子，还是去吧，我想认识更多的人。于是，到了今天，还特地做了些准备。</p><br><p>早上起来，与往常一样，洗漱、做早饭。不一样的是，潜意识下臭美照镜子，我不知道今天会遇到什么样的人，不知道自己的穿着是否得体，也没有将头发梳成大人模样。算是参与的一件事，不管怎样都应该重视。</p><br><p>9:28分到达指定地点，是要抽个号码牌，抽到了76号，找到座位坐下，看到了几张熟悉的面孔顿时显示的不那么尴尬。周围没有多少人。被告知，后面可能人数不够需要重新抽签不然略显尴尬，我听从安排，因为我喜欢这种随机性，也对不可预见的结果保持着好奇，我拿到了26号。</p><br><p>座位的安排是男女各一边，持有相同的号码。大致看了下，男女比例接近1:1，烽火主男性，华泰主女性。总人数分成四组，接下来的时间是游戏阶段，每组做不同的游戏，我们是第二组。看着第一组的做游戏的过程，我在思考如果是我在下面比划，是否也能放得开？不确定。难道脸皮变薄了？我这么认为（说这句的话时候，我可能把脸借给了吴彦祖）。我们组的游戏是“女生值1块，男生值5毛（相信我，当时肯定不是叫这个名字）”，主持人随机叫出金额，我们需要抱团，未抱团的则被淘汰。最终留下了两个男生和一个女生，我是其中一个男生，这是队友照顾的结果。这就算胜出了，于是被叫到了台上。</p><br><p>在台上当然就是自我介绍，说起自己的爱好想起了曾经放下的BBox，就不说处于什么原因放弃了，反正现在也跟初衷不一样。即兴来了一段，好在音还算准，鼓点还凑合，也打了我喜欢的bass。当然是有点紧张的，草草结束。也算“重操旧业”，好像也很久没在台上打过，我喜欢这感觉。</p><br><p>接下来是吃饭时间，我没有吃太多东西，不是放不开膀子吃，是真的吃不下太多。很多人在一起吃，很奇妙，多么热闹啊。吃饭的时候是离开桌子可以认识周围以外人的时间，我竟然没有做到，太不像我了，可能确实现在跟以前确实不同，我安静的玩着手机。</p><br><p>最后的阶段是比较有意思的，因为我记得我笑了好多次，互相“表白”阶段。当男女双方都写下了对方的号码，就能够都得到一盒月饼。个人认为，这是小概率事件，发生的可能性几乎无，但也饶有兴趣的听着主持人唱票，有些有趣的事情。先说说我右边的男生，他为了月饼去找女生配对，真的这么做了！导致后来主持人读到双方填写相同的号码时，我心里都想着：这是为了月饼！还有些事，像两个男生写的同一个女生，有人跟摄影师表白了，都觉得很有意思。在我在的时间里，被这些逗笑了好几次。后面肯定还有很多有趣的事，可是我不在，我是不愿意走的，但公司需要我，人民需要我，我要回去加班。略带遗憾，工作重要。</p><br><p>就这样结束了这次联谊，剩下的时间在公司度过。接下来的一天在公司待到23:03，周围漆黑一片，看着窗户的倒影稍有一点恐惧。</p><br><p>多充实！！&lt;/&gt;<br></p><p>2017.9.18 22:42</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017.9.17 00:22起&lt;/p&gt;&lt;br&gt;&lt;p&gt;之前的某一天，有人在mplus上发关于联谊的通知。考虑到周末的去处以及内心的好奇，我报了名。好在，这次的联谊还算有意思，或许应该多参与这些活动。&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://JohnneyAnn.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://JohnneyAnn.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
